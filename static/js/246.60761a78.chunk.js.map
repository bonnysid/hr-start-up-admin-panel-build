{"version":3,"file":"static/js/246.60761a78.chunk.js","mappings":"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","sources":["components/Dialog/styled.ts","components/Dialog/index.tsx","pages/Posts/styled.ts","api/Posts/PostsApi.ts","pages/Posts/PostItem/styled.ts","components/Tag/styled.ts","components/Tag/index.tsx","pages/Posts/PostItem/index.tsx","pages/Posts/PostModal/styled.ts","pages/Posts/PostModal/index.tsx","pages/Posts/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Button } from '@src/components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 50%;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 56px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledIcon = styled.div`\r\n  width: 56px;\r\n  height: 56px;\r\n  padding: 16px;\r\n  border-radius: 50%;\r\n  &.answer {\r\n    color: ${COLORS.yellow70};\r\n    background-color: ${COLORS.yellow30};\r\n  }\r\n  &.notification {\r\n    color: ${COLORS.green70};\r\n    background-color: ${COLORS.green30};\r\n  }\r\n  &.warning {\r\n    color: ${COLORS.red70};\r\n    background-color: ${COLORS.red30};\r\n  }\r\n  &.info {\r\n    color: ${COLORS.blue70};\r\n    background-color: ${COLORS.blue30};\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 600px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Close = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray150};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n  letter-spacing: -0.019em;\r\n`;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Icon, IconTypes } from '@components/Icon';\r\nimport { ButtonProps, ButtonVariant, Modal } from '@src/components';\r\n\r\nimport * as ST from './styled';\r\n\r\nexport enum DialogTypes {\r\n  ANSWER = 'answer',\r\n  NOTIFICATION = 'notification',\r\n  WARNING = 'warning',\r\n  INFO = 'info'\r\n}\r\n\r\ntype ActionType = React.ButtonHTMLAttributes<HTMLButtonElement> & ButtonProps;\r\n\r\ninterface IActionsTypes {\r\n  ok?: ActionType;\r\n  cancel?: ActionType;\r\n  submit?: ActionType;\r\n}\r\n\r\ninterface IDialogProps {\r\n  loading?: boolean;\r\n  classNamePrefix?: string;\r\n  className?: string;\r\n  title?: string;\r\n  type?: DialogTypes;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  onClose?: () => void;\r\n  onOk?: () => void;\r\n  actions?: IActionsTypes;\r\n  closeOnDocumentClick?: boolean;\r\n  closeOnEscape?: boolean;\r\n}\r\n\r\nconst dialogIcons: Record<DialogTypes, IconTypes> = {\r\n  answer: 'circle-warning',\r\n  notification: 'circle-information',\r\n  warning: 'warning',\r\n  info: 'circle-information',\r\n};\r\n\r\ninterface IProps extends IDialogProps, PropsWithChildren {\r\n  closeHandler: () => void;\r\n}\r\n\r\nconst Dialog: React.FC<IProps> = ({\r\n  loading,\r\n  className,\r\n  title,\r\n  type,\r\n  closeHandler,\r\n  onConfirm,\r\n  onOk,\r\n  actions,\r\n  children,\r\n}) => (\r\n  <Modal\r\n    open\r\n    onClose={closeHandler}\r\n  >\r\n    <ST.Container className={className}>\r\n      <ST.Close\r\n        onClick={closeHandler}\r\n      >\r\n        <Icon\r\n          type=\"close\"\r\n        />\r\n      </ST.Close>\r\n      <ST.Body>\r\n        {type && (\r\n          <ST.StyledIcon className={type}>\r\n            <Icon type={dialogIcons[type]} />\r\n          </ST.StyledIcon>\r\n        )}\r\n        {title && <ST.Title>{title}</ST.Title>}\r\n        <ST.Content>{children}</ST.Content>\r\n      </ST.Body>\r\n      <ST.Buttons>\r\n        {onConfirm ? (\r\n          <>\r\n            <ST.StyledButton\r\n              {...actions?.submit}\r\n              variant={type === DialogTypes.WARNING ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n              onClick={onConfirm}\r\n              isLoading={loading}\r\n              disabled={loading}\r\n            />\r\n            <ST.StyledButton\r\n              {...actions?.cancel}\r\n              id=\"ConfirmDialogCancel\"\r\n              variant={ButtonVariant.OUTLINE}\r\n              onClick={closeHandler}\r\n              disabled={loading}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ST.StyledButton\r\n            onClick={onOk}\r\n            isLoading={loading}\r\n            {...actions?.ok}\r\n          />\r\n        )}\r\n      </ST.Buttons>\r\n    </ST.Container>\r\n  </Modal>\r\n);\r\n\r\nexport { Dialog };\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-auto-rows: max-content;\r\n  grid-row-gap: 14px;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import { instance } from '@src/api/base';\r\nimport { IPost } from '@src/api/Posts/models';\r\n\r\nexport class PostsApi {\r\n  static fetchPosts() {\r\n    return instance.get<IPost[]>('/admin/posts');\r\n  }\r\n\r\n  static banPost(id: string) {\r\n    return instance.post(`/admin/posts/ban/${id}`);\r\n  }\r\n\r\n  static unbanPost(id: string) {\r\n    return instance.post(`/admin/posts/unban/${id}`);\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n  cursor: pointer;\r\n  transition: background-color .3s;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n\r\n  &:hover {\r\n    background: ${COLORS.lightGray20};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${COLORS.gray90};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 4px 6px;\r\n  border-radius: 6px;\r\n`;\r\n","import { ITag } from '@src/api/Tags/models';\r\nimport { FC } from 'react';\r\nimport * as ST from './styled';\r\nimport { AVATAR_COLORS_SUBTLE } from '@components/Avatar/AvatarColors';\r\nimport { getRadixTransformation } from '@src/components';\r\n\r\ninterface IProps {\r\n  tag: ITag;\r\n}\r\n\r\nexport const Tag: FC<IProps> = ({ tag }) => {\r\n  return (\r\n    <ST.Wrapper style={AVATAR_COLORS_SUBTLE[\r\n      getRadixTransformation(tag.id.slice(-1), AVATAR_COLORS_SUBTLE.length)\r\n      ]}>\r\n      {tag.value}\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport { IPost } from '@src/api/Posts/models';\r\nimport * as ST from './styled';\r\nimport { Tag } from '@components/Tag';\r\nimport { Avatar, Status } from '@src/components';\r\n\r\ninterface IProps {\r\n  post: IPost;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const PostItem: FC<IProps> = ({ post, onClick }) => {\r\n  return (\r\n    <ST.Wrapper onClick={onClick}>\r\n      <ST.Header>\r\n        <ST.Title>\r\n          {post.title} ({post.id})\r\n        </ST.Title>\r\n        <Status status={post.status} />\r\n      </ST.Header>\r\n      <ST.Info>\r\n        {post.tags.map(it => <Tag key={it.id} tag={it} />)}\r\n      </ST.Info>\r\n      <ST.Info>\r\n        <Avatar\r\n          firstName={post.user.firstName}\r\n          lastName={post.user.lastName}\r\n          src={post.user.avatar}\r\n        />\r\n        {post.user.lastName} {post.user.firstName} ({post.user.email})\r\n      </ST.Info>\r\n      <ST.Description>{post.shortDescription}</ST.Description>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 18px;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: -0.014em;\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n\r\nexport const Video = styled(ReactPlayer)`\r\n  width: 100% !important;\r\n`\r\n\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${COLORS.gray90};\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { Avatar, Button, ButtonVariant, InfoItem, SideModal, Status, TextShorter, VideoPlayer } from '@src/components';\r\nimport { UserStatus } from '@src/api/Users/models';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { IPost } from '@src/api/Posts/models';\r\nimport { PostsApi } from '@src/api/Posts/PostsApi';\r\nimport { Tag } from '@components/Tag';\r\nimport ReactPlayer from 'react-player';\r\n\r\ninterface IProps {\r\n  post: IPost;\r\n  onClose: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\nexport const PostModal: FC<IProps> = ({onClose, post, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const banModal = useModalControls();\r\n\r\n  const isActive = post.status === UserStatus.ACTIVE;\r\n\r\n  const handleBlockUnBlock = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      if (isActive) {\r\n        const res = await PostsApi.banPost(post.id);\r\n        toastSuccess(res.data.message);\r\n      } else {\r\n        const res = await PostsApi.unbanPost(post.id)\r\n        toastSuccess(res.data.message);\r\n      }\r\n      refetch()\r\n      banModal.close();\r\n      onClose();\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SideModal\r\n      titleText={(\r\n        <ST.Header>\r\n          <ST.Title>\r\n            <TextShorter tooltip>\r\n              {post.title} ({post.id})\r\n            </TextShorter>\r\n          </ST.Title>\r\n          <Status status={post.status} />\r\n        </ST.Header>\r\n      )}\r\n      onClose={onClose}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Wrapper>\r\n        <InfoItem\r\n          text=\"ID:\"\r\n          info={(\r\n            <>\r\n              {post.id}\r\n            </>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Заголовок:\"\r\n          info={(\r\n            <>\r\n              {post.title}\r\n            </>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Автор:\"\r\n          info={(\r\n            <>\r\n              <Avatar\r\n                firstName={post.user.firstName}\r\n                lastName={post.user.lastName}\r\n                src={post.user.avatar}\r\n              />\r\n              {post.user.lastName} {post.user.firstName} ({post.user.email})\r\n            </>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Теги:\"\r\n          info={(\r\n            <ST.Info>\r\n              {post.tags.map(it => <Tag key={it.id} tag={it} />)}\r\n            </ST.Info>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Краткое описание:\"\r\n          info={(\r\n            <ST.Description>\r\n              {post.shortDescription}\r\n            </ST.Description>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Описание:\"\r\n          info={(\r\n            <ST.Description>\r\n              {post.description}\r\n            </ST.Description>\r\n          )}\r\n        />\r\n        <VideoPlayer\r\n          url={post.videoUrl}\r\n        />\r\n        <ST.Footer>\r\n          <Button\r\n            fullWidth\r\n            onClick={banModal.open}\r\n            variant={isActive ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n            text={isActive ? 'Заблокировать' : 'Разблокировать'}\r\n          />\r\n        </ST.Footer>\r\n      </ST.Wrapper>\r\n      {banModal.isOpen && (\r\n        <Dialog\r\n          type={isActive ? DialogTypes.WARNING : DialogTypes.ANSWER}\r\n          closeHandler={banModal.close}\r\n          onConfirm={handleBlockUnBlock}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: banModal.close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: isActive ? 'Заблокировать' : 'Разблокировать',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите {isActive ? 'заблокировать' : 'разблокировать'} пост \"{post.title}\"?\r\n        </Dialog>\r\n      )}\r\n    </SideModal>\r\n  )\r\n}\r\n","import { FC, useEffect, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { RoleItem } from '@pages/Roles/RoleItem';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { IPost } from '@src/api/Posts/models';\r\nimport { PostsApi } from '@src/api/Posts/PostsApi';\r\nimport { PostItem } from '@pages/Posts/PostItem';\r\nimport { PostModal } from '@pages/Posts/PostModal';\r\n\r\nconst Posts: FC = () => {\r\n  const { isOpen, open, close } = useModalControls();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [posts, setPosts] = useState<IPost[]>([]);\r\n  const [activePost, setActivePost] = useState<IPost>();\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await PostsApi.fetchPosts();\r\n      setPosts(res.data);\r\n    } catch (e) {\r\n      toastError(e)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const renderedPosts = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!posts.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Постов нету\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        {posts.map(it => <PostItem key={it.id} post={it} onClick={() => setActivePost(it)} />)}\r\n      </ST.Content>\r\n    )\r\n  }, [posts, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader title=\"Посты\" />\r\n      {renderedPosts}\r\n      {activePost && <PostModal post={activePost} onClose={() => setActivePost(undefined)} refetch={getPosts} />}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Posts;\r\n"],"names":["Buttons","styled","_templateObject","_taggedTemplateLiteral","StyledButton","Button","_templateObject2","Body","_templateObject3","StyledIcon","_templateObject4","COLORS","Content","_templateObject5","Container","_templateObject6","Close","_templateObject7","Title","_templateObject8","DialogTypes","dialogIcons","answer","notification","warning","info","Dialog","_ref","loading","className","title","type","closeHandler","onConfirm","onOk","actions","children","_jsx","Modal","open","onClose","_jsxs","ST","onClick","Icon","_Fragment","_objectSpread","submit","variant","WARNING","ButtonVariant","isLoading","disabled","cancel","id","ok","Wrapper","EmptyText","PostsApi","_classCallCheck","_createClass","key","value","instance","concat","Header","Info","Description","Tag","tag","style","AVATAR_COLORS_SUBTLE","getRadixTransformation","slice","PostItem","post","Status","status","tags","map","it","Avatar","firstName","user","lastName","src","avatar","email","shortDescription","Footer","ReactPlayer","_templateObject9","PostModal","refetch","_useState","useState","_useState2","_slicedToArray","setIsLoading","banModal","useModalControls","isActive","UserStatus","handleBlockUnBlock","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_res","wrap","_context","prev","next","banPost","sent","toastSuccess","data","message","unbanPost","close","t0","toastError","finish","stop","apply","arguments","SideModal","titleText","TextShorter","tooltip","closeOnDocumentClick","InfoItem","text","description","VideoPlayer","url","videoUrl","fullWidth","isOpen","_useModalControls","_useState3","_useState4","posts","setPosts","_useState5","_useState6","activePost","setActivePost","getPosts","fetchPosts","useEffect","renderedPosts","useMemo","AppLoader","length","PageHeader","undefined"],"sourceRoot":""}