{"version":3,"file":"static/js/231.5b109f0b.chunk.js","mappings":"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","sources":["pages/Tags/styled.ts","pages/Tags/CreateTagModal/styled.ts","pages/Tags/CreateTagModal/index.tsx","pages/Tags/TagItem/styled.ts","pages/Tags/UpdateTagModal/styled.ts","pages/Tags/UpdateTagModal/index.tsx","pages/Tags/TagItem/index.tsx","pages/Tags/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 14px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { handleFormError, toastError, toastSuccess } from '@src/utils/toast';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface TagForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const CreateTagModal: FC<IProps> = ({ close, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<TagForm>({\r\n    initialValues: {\r\n      value: '',\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await TagsApi.fetchCreateTag(values.value);\r\n        toastSuccess(`Тег ${values.value} успешно создан`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        handleFormError(e, form)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Создание тега\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          onBlur={form.handleBlur}\r\n          value={form.values.value}\r\n          caption=\"Название тега\"\r\n          placeholder=\"Введите название тега\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Создать\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 10px;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.red60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.red80};\r\n  }\r\n`;\r\n\r\nexport const EditIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.darkGray110};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray140};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { ITag } from '@src/api/Tags/models';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  tag: ITag;\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface TagForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const UpdateTagModal: FC<IProps> = ({ close, refetch, tag }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<TagForm>({\r\n    initialValues: {\r\n      value: tag.value,\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await TagsApi.fetchUpdateTag(tag.id, values.value);\r\n        toastSuccess(`Тег ${values.value} успешно обновлен`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        toastError(e)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Изменение тега\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          value={form.values.value}\r\n          onBlur={form.handleBlur}\r\n          caption=\"Название тега\"\r\n          placeholder=\"Введите название тега\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Сохранить\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import { FC, useState } from 'react';\r\nimport { ITag } from '@src/api/Tags/models';\r\nimport * as ST from './styled';\r\nimport { IconSize } from '@components/Icon';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { UpdateTagModal } from '@pages/Tags/UpdateTagModal';\r\n\r\ninterface IProps {\r\n  refetch: () => void;\r\n  tag: ITag;\r\n}\r\n\r\nexport const TagItem: FC<IProps> = ({ tag, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { isOpen, open, close } = useModalControls();\r\n  const updateModal = useModalControls();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await TagsApi.fetchDeleteTag(tag.id);\r\n      refetch();\r\n      close();\r\n      toastSuccess(`Тег ${tag.value} успешно удален`);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <ST.Info>\r\n        {tag.value} ({tag.id})\r\n      </ST.Info>\r\n      <ST.Controls>\r\n        {tag.canDeleteEdit && <ST.EditIcon type={'edit'} size={IconSize.XL} onClick={updateModal.open} />}\r\n        {tag.canDeleteEdit && <ST.DeleteIcon type={'delete'} size={IconSize.XL} onClick={open} />}\r\n      </ST.Controls>\r\n      {isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить тег {tag.value}?\r\n        </Dialog>\r\n      )}\r\n      {updateModal.isOpen && (\r\n        <UpdateTagModal tag={tag} close={updateModal.close} refetch={refetch} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n","import { FC, useEffect, useMemo } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { useModalControls, useTags } from '@src/hooks';\r\nimport { CreateTagModal } from '@pages/Tags/CreateTagModal';\r\nimport { TagItem } from '@pages/Tags/TagItem';\r\n\r\n\r\n\r\nconst Tags: FC = () => {\r\n  const { isOpen, open, close } = useModalControls();\r\n  const { getTags, tags, isLoading } = useTags();\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, []);\r\n\r\n  const renderedTags = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!tags.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Тегов нет\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        {tags.map(it => <TagItem key={it.id} tag={it} refetch={getTags} />)}\r\n      </ST.Content>\r\n    )\r\n  }, [tags, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader\r\n        title=\"Теги\"\r\n        buttonText=\"Создать тег\"\r\n        count={`${tags.length} тегов`}\r\n        onButtonClick={open}\r\n      />\r\n      {renderedTags}\r\n      {isOpen && (\r\n        <CreateTagModal close={close} refetch={getTags} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Tags;\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","EmptyText","_templateObject3","Form","Footer","VALIDATION_SCHEMA","yup","shape","value","required","CreateTagModal","_ref","close","refetch","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","form","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","TagsApi","toastSuccess","concat","t0","handleFormError","finish","stop","_x","apply","arguments","_jsx","SideModal","titleText","onClose","closeOnDocumentClick","children","_jsxs","ST","handleSubmit","Input","name","onChange","handleChange","onBlur","handleBlur","caption","placeholder","isError","Boolean","errors","errorText","Button","text","fullWidth","variant","ButtonVariant","onClick","COLORS","Info","Controls","DeleteIcon","Icon","_templateObject4","EditIcon","_templateObject5","UpdateTagModal","tag","id","toastError","TagItem","_useModalControls","useModalControls","isOpen","open","updateModal","handleDelete","_ref2","canDeleteEdit","type","size","IconSize","Dialog","DialogTypes","closeHandler","onConfirm","actions","cancel","submit","_useTags","useTags","getTags","tags","useEffect","renderedTags","useMemo","AppLoader","length","map","it","PageHeader","title","buttonText","count","onButtonClick"],"sourceRoot":""}