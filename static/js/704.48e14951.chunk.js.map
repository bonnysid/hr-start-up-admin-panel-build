{"version":3,"file":"static/js/704.48e14951.chunk.js","mappings":"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","sources":["api/Posts/PostsApi.ts","api/Posts/models.ts","components/Tag/styled.ts","components/Tag/index.tsx","pages/Complaints/styled.ts","pages/Complaints/ComplaintItem/styled.ts","pages/Complaints/ComplaintItem/index.tsx","pages/Complaints/ComplaintModal/styled.ts","api/Complaints/ComplaintsApi.ts","pages/Complaints/ComplaintModal/index.tsx","pages/Complaints/useFilters.ts","pages/Complaints/index.tsx","pages/Dialogs/Message/styled.ts","pages/Dialogs/Message/index.tsx","pages/Posts/PostModal/styled.ts","pages/Posts/PostModal/index.tsx","pages/Users/UserModal/styled.ts","pages/Users/UserModal/index.tsx","utils/roles.ts"],"sourcesContent":["import { instance } from '@src/api/base';\r\nimport { IGetPostsParams, IPost, IPostBanDTO, IPostDetail } from '@src/api/Posts/models';\r\n\r\nexport class PostsApi {\r\n  static fetchPosts(params?: IGetPostsParams) {\r\n    return instance.get<IPost[]>('/admin/posts', {\r\n      params,\r\n    });\r\n  }\r\n\r\n  static fetchPostDetail(id: string) {\r\n    return instance.get<IPostDetail>(`/admin/posts/${id}`);\r\n  }\r\n\r\n  static banPost({ id, ...dto }: IPostBanDTO) {\r\n    return instance.post(`/admin/posts/ban/${id}`, dto);\r\n  }\r\n\r\n  static unbanPost(id: string) {\r\n    return instance.post(`/admin/posts/unban/${id}`);\r\n  }\r\n\r\n  static deletePost(id: string) {\r\n    return instance.delete(`/admin/posts/${id}`);\r\n  }\r\n}\r\n","import { IUser, UserStatus } from '@src/api/Users/models';\r\nimport { ITag } from '@src/api/Tags/models';\r\n\r\nexport interface IPost {\r\n  id: string;\r\n  title: string;\r\n  videoUrl: string;\r\n  description: string;\r\n  shortDescription: string;\r\n  status: UserStatus;\r\n  user: IUser;\r\n  tags: ITag[];\r\n  updatedAt: string;\r\n  createdAt: string;\r\n  views: number;\r\n  commentsCount: number;\r\n  favoriteCount: number;\r\n}\r\n\r\nexport interface IComment {\r\n  id: string;\r\n  text: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  user: IUser;\r\n}\r\n\r\nexport enum PostsSort {\r\n  CREATED_AT = 'createdAt',\r\n  VIEWS = 'views',\r\n}\r\n\r\nexport enum SortValue {\r\n  DESC = 'desc',\r\n  ASC = 'asc'\r\n}\r\n\r\nexport interface IBanReason {\r\n  text: string;\r\n  user: IUser;\r\n}\r\n\r\nexport interface IPostDetail extends IPost {\r\n  comments: IComment[];\r\n  banReason?: IBanReason;\r\n}\r\n\r\nexport interface IPostBanDTO {\r\n  id: string;\r\n  text: string;\r\n}\r\n\r\nexport interface IGetPostsParams {\r\n  search?: string;\r\n  tags?: string[];\r\n  users?: string[];\r\n  status?: string[];\r\n  sortValue?: string;\r\n  sort?: string;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 4px 6px;\r\n  border-radius: 6px;\r\n`;\r\n","import { ITag } from '@src/api/Tags/models';\r\nimport { FC } from 'react';\r\nimport * as ST from './styled';\r\nimport { AVATAR_COLORS_SUBTLE } from '@components/Avatar/AvatarColors';\r\nimport { getRadixTransformation } from '@src/components';\r\n\r\ninterface IProps {\r\n  tag: ITag;\r\n}\r\n\r\nexport const Tag: FC<IProps> = ({ tag }) => {\r\n  return (\r\n    <ST.Wrapper style={AVATAR_COLORS_SUBTLE[\r\n      getRadixTransformation(tag.id.slice(-1), AVATAR_COLORS_SUBTLE.length)\r\n      ]}>\r\n      {tag.value}\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-auto-rows: max-content;\r\n  grid-gap: 14px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  --min-width: 231px;\r\n  grid-gap: 16px;\r\n  display: grid;\r\n  grid-template-columns: 231px 231px 231px 340px;\r\n  width: 100%;\r\n  padding: 16px;\r\n  background: ${COLORS.white};\r\n  box-shadow: 0 7px 15px rgba(0,0,0,.05);\r\n  border-radius: 10px;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n  cursor: pointer;\r\n  transition: background-color .3s;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n\r\n  &:hover {\r\n    background: ${COLORS.lightGray20};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  width: fit-content;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const InfoItem = styled.div`\r\n  display: flex;\r\n  color: ${COLORS.gray70};\r\n  width: fit-content;\r\n  gap: 6px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const MessagesCount = styled.div`\r\n  display: flex;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  color: ${COLORS.white};\r\n  background-color: ${COLORS.blue60};\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${COLORS.gray90};\r\n`;\r\n","import { FC } from 'react';\r\nimport * as ST from './styled';\r\nimport { Avatar, StatusComplaint, TypeComplaint } from '@src/components';\r\nimport { IComplaint } from '@src/api/Complaints/models';\r\n\r\ninterface IProps {\r\n  complaint: IComplaint;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const ComplaintItem: FC<IProps> = ({ complaint, onClick }) => {\r\n  return (\r\n    <ST.Wrapper onClick={onClick}>\r\n      <ST.Header>\r\n        <ST.Title>\r\n          # {complaint.id}\r\n          {complaint.unreadableMessages && <ST.MessagesCount>{complaint.unreadableMessages}</ST.MessagesCount>}\r\n        </ST.Title>\r\n        <ST.Info>\r\n          <TypeComplaint type={complaint.type} />\r\n          <StatusComplaint status={complaint.status} />\r\n        </ST.Info>\r\n      </ST.Header>\r\n      <ST.Info>\r\n        <Avatar\r\n          firstName={complaint.author.firstName}\r\n          lastName={complaint.author.lastName}\r\n          src={complaint.author.avatar}\r\n          userId={complaint.author.id}\r\n        />\r\n        {complaint.author.lastName} {complaint.author.firstName} ({complaint.author.email})\r\n      </ST.Info>\r\n      <ST.Description>{complaint.text}</ST.Description>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport ReactPlayer from 'react-player';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 18px;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: -0.014em;\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n\r\nexport const ComplaintTarget = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px;\r\n  background-color: ${COLORS.lightGray20};\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  transition: background-color .3s;\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.lightGray50};\r\n  }\r\n`;\r\n\r\nexport const ScrollableContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const NewMessage = styled.div`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  bottom: 76px;\r\n  left: calc(50% - 69px);\r\n  display: flex;\r\n  padding: 4px 8px;\r\n  border-radius: 5px;\r\n  color: ${COLORS.lightGray10};\r\n  background-color: ${COLORS.blue60};\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.blue70};\r\n  }\r\n\r\n  &:active,\r\n  &.active {\r\n    background-color: ${COLORS.blue80};\r\n  }\r\n`;\r\n\r\nexport const Chat = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 500px;\r\n  height: 100%;\r\n  max-height: 600px;\r\n  justify-content: flex-end;\r\n  background-color: ${COLORS.lightGray10};\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const ChatContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  min-height: 100%;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const ChatFooter = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: fit-content;\r\n  gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-top: 1px solid ${COLORS.lightGray40};\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background: transparent;\r\n`;\r\n\r\nexport const SendIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color .3s;\r\n  \r\n  &:hover {\r\n    color: ${COLORS.blue60};\r\n  }\r\n`;\r\n\r\nexport const InfoItem = styled.div`\r\n  display: flex;\r\n  color: ${COLORS.gray70};\r\n  width: fit-content;\r\n  gap: 6px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${COLORS.gray90};\r\n`;\r\n","import { instance } from '@src/api/base';\r\nimport { IComplaint, IComplaintDetails, IGetComplaintsParams } from './models';\r\n\r\nexport class ComplaintsApi {\r\n  static fetchComplaints(params: IGetComplaintsParams) {\r\n    return instance.get<IComplaint[]>('/complaints', {\r\n      params,\r\n    });\r\n  }\r\n\r\n  static fetchResolveComplaint(id: string) {\r\n    return instance.post(`/complaints/resolve/${id}`);\r\n  }\r\n\r\n  static fetchComplaint(id: string) {\r\n    return instance.get<IComplaintDetails>(`/complaints/${id}`);\r\n  }\r\n\r\n  static fetchCloseComplaint(id: string) {\r\n    return instance.post(`/complaints/close/${id}`);\r\n  }\r\n\r\n  static fetchUnresolveComplaint(id: string) {\r\n    return instance.post(`/complaints/unresolve/${id}`);\r\n  }\r\n}\r\n","import { FC, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport {\r\n  AppLoader,\r\n  Avatar,\r\n  Button,\r\n  ButtonVariant,\r\n  InfoItem,\r\n  SideModal,\r\n  StatusComplaint, Textarea,\r\n  TextShorter,\r\n  TypeComplaint\r\n} from '@src/components';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { getTime } from '@src/utils/date';\r\nimport { ComplaintStatus, ComplaintType, IComplaintDetails, IComplaintMessage } from '@src/api/Complaints/models';\r\nimport { ComplaintsApi } from '@src/api/Complaints/ComplaintsApi';\r\nimport { useMessageCallBack, useModalControls } from '@src/hooks';\r\nimport { UserModal } from '@pages/Users/UserModal';\r\nimport { PostModal } from '@pages/Posts/PostModal';\r\nimport { IconSize } from '@components/Icon';\r\nimport { useFormik } from 'formik';\r\nimport { SocketApi } from '@src/api/SocketApi/SocketApi';\r\nimport { IDeleteMessage, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { Message } from '@pages/Dialogs/Message';\r\n\r\ninterface IProps {\r\n  complaintId: string;\r\n  onClose: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\nexport const ComplaintModal: FC<IProps> = ({onClose, refetch, complaintId}) => {\r\n  const [complaint, setComplaint] = useState<IComplaintDetails>();\r\n  const [messages, setMessages] = useState<IComplaintMessage[]>([]);\r\n  const { user: currentUser } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isInitialLoading, setIsInitialLoading] = useState(false);\r\n  const closeModal = useModalControls();\r\n  const resolveModal = useModalControls();\r\n  const unresolveModal = useModalControls();\r\n  const [userId, setUserId] = useState<string>();\r\n  const [postId, setPostId] = useState<string>();\r\n  const [showNewMessage, setShowNewMessage] = useState(false);\r\n  const chatRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    chatRef.current?.scrollTo(0, chatRef.current?.scrollHeight)\r\n  }\r\n\r\n  const form = useFormik({\r\n    initialValues: {\r\n      message: ''\r\n    },\r\n    onSubmit: (values) => {\r\n      onSend(values.message)\r\n    }\r\n  });\r\n\r\n  const getComplaint = async () => {\r\n    try {\r\n      setIsInitialLoading(true);\r\n      const res = await ComplaintsApi.fetchComplaint(complaintId);\r\n\r\n      setComplaint(res.data);\r\n      setMessages(res.data.messages);\r\n    } catch (e) {\r\n      toastError(e)\r\n    } finally {\r\n      setIsInitialLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (chatRef.current) {\r\n      const scroll = chatRef.current?.scrollHeight - chatRef.current?.clientHeight - chatRef.current?.scrollTop\r\n\r\n      if (scroll < 25) {\r\n        setShowNewMessage(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleResolve = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await ComplaintsApi.fetchResolveComplaint(complaintId);\r\n      toastSuccess(res.data.message);\r\n      refetch();\r\n      resolveModal.close();\r\n      onClose();\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleClose = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await ComplaintsApi.fetchCloseComplaint(complaintId);\r\n      toastSuccess(res.data.message);\r\n      refetch();\r\n      closeModal.close();\r\n      onClose();\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleUnresovle = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await ComplaintsApi.fetchUnresolveComplaint(complaintId);\r\n      toastSuccess(res.data.message);\r\n      refetch();\r\n      unresolveModal.close();\r\n      onClose();\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleOpenUserModal = () => {\r\n    setUserId(complaint?.user?.id);\r\n  }\r\n\r\n  const handleOpenPostModal = () => {\r\n    setPostId(complaint?.post?.id);\r\n  }\r\n\r\n  const handleCloseUserModal = () => {\r\n    setUserId(undefined);\r\n  }\r\n\r\n  const handleClosePostModal = () => {\r\n    setPostId(undefined);\r\n  }\r\n\r\n  const onSend = (message: string) => {\r\n    SocketApi.sendComplaintMessage({\r\n      complaintId,\r\n      text: message,\r\n    });\r\n    form.resetForm();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getComplaint();\r\n  }, [complaintId]);\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as IComplaintMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.COMPLAINT_MESSAGE && parsedMessage.complaintId === complaintId) {\r\n      setMessages(prev => [...prev, parsedMessage]);\r\n\r\n      if (parsedMessage.user.id !== currentUser?.id) {\r\n        SocketApi.readMessage({ messageId: parsedMessage.id });\r\n        if (chatRef.current) {\r\n          const scroll = chatRef.current?.scrollHeight - chatRef.current?.clientHeight - chatRef.current?.scrollTop\r\n          if (scroll >= 50) {\r\n            setShowNewMessage(true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [complaintId, currentUser]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (chatRef.current) {\r\n      const lastMsg = messages[messages.length - 1];\r\n      const scroll = chatRef.current?.scrollHeight - chatRef.current?.clientHeight - chatRef.current?.scrollTop;\r\n\r\n      if (lastMsg && lastMsg.user.id === currentUser?.id) {\r\n        scrollToBottom()\r\n      } else if (scroll < 50) {\r\n        scrollToBottom()\r\n      }\r\n    }\r\n\r\n  }, [messages]);\r\n\r\n  const renderedContent = useMemo(() => {\r\n    if (!messages.length) {\r\n      return 'Нет сообщений'\r\n    }\r\n\r\n    return messages.map((it) => <Message key={it.id} message={it} withAvatar />)\r\n  }, [messages]);\r\n\r\n  return (\r\n    <SideModal\r\n      titleText={complaint && (\r\n        <ST.Header>\r\n          <ST.Title>\r\n            <TextShorter tooltip>\r\n              # {complaint.id}\r\n            </TextShorter>\r\n          </ST.Title>\r\n          <TypeComplaint type={complaint.type} />\r\n          <StatusComplaint status={complaint.status}/>\r\n        </ST.Header>\r\n      )}\r\n      onClose={onClose}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Wrapper>\r\n        {isInitialLoading || !complaint ? (\r\n          <AppLoader />\r\n        ) : (\r\n          <>\r\n            <InfoItem\r\n              text=\"ID:\"\r\n              info={(\r\n                <>\r\n                  {complaint.id}\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Содержание:\"\r\n              info={(\r\n                <>\r\n                  {complaint.text}\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Автор:\"\r\n              info={(\r\n                <>\r\n                  <Avatar\r\n                    firstName={complaint.author.firstName}\r\n                    lastName={complaint.author.lastName}\r\n                    src={complaint.author.avatar}\r\n                    userId={complaint.author.id}\r\n                  />\r\n                  {complaint.author.lastName} {complaint.author.firstName} ({complaint.author.email})\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text={`Жалоба на ${complaint.type === ComplaintType.POST ? 'пост' : 'пользователя'}:`}\r\n              info={complaint.type === ComplaintType.POST ? (\r\n                <ST.ComplaintTarget onClick={handleOpenPostModal}>\r\n                  {complaint.post.title} ({complaint.post.id})\r\n                </ST.ComplaintTarget>\r\n              ) : (\r\n                <ST.ComplaintTarget onClick={handleOpenUserModal}>\r\n                  <Avatar\r\n                    firstName={complaint.user.firstName}\r\n                    lastName={complaint.user.lastName}\r\n                    src={complaint.user.avatar}\r\n                    userId={complaint.user.id}\r\n                  />\r\n                  {complaint.user.lastName} {complaint.user.firstName} ({complaint.user.email})\r\n                </ST.ComplaintTarget>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Создан:\"\r\n              info={getTime(complaint.createdAt)}\r\n            />\r\n            <InfoItem\r\n              text=\"Обновлен:\"\r\n              info={getTime(complaint.updatedAt)}\r\n            />\r\n            {complaint.whoResolve && (\r\n              <InfoItem\r\n                text={`Кто ${complaint.status === ComplaintStatus.RESOLVED ? 'решил' : 'закрыл'}:`}\r\n                info={(\r\n                  <>\r\n                    <Avatar\r\n                      firstName={complaint.whoResolve.firstName}\r\n                      lastName={complaint.whoResolve.lastName}\r\n                      src={complaint.whoResolve.avatar}\r\n                      userId={complaint.whoResolve.id}\r\n                    />\r\n                    {complaint.whoResolve.lastName} {complaint.whoResolve.firstName} ({complaint.whoResolve.email})\r\n                  </>\r\n                )}\r\n              />\r\n            )}\r\n            <ST.Chat>\r\n              <ST.ScrollableContent ref={chatRef} onScroll={handleScroll}>\r\n                <ST.ChatContent>\r\n                  {renderedContent}\r\n                </ST.ChatContent>\r\n              </ST.ScrollableContent>\r\n              {showNewMessage && (\r\n                <ST.NewMessage onClick={scrollToBottom}>\r\n                  Новое сообщение\r\n                </ST.NewMessage>\r\n              )}\r\n              <ST.ChatFooter onSubmit={form.handleSubmit}>\r\n                <Textarea\r\n                  name=\"message\"\r\n                  value={form.values.message}\r\n                  onChange={form.handleChange}\r\n                  placeholder=\"Введите сообщение\"\r\n                  onEnter={() => onSend(form.values.message)}\r\n                />\r\n                <ST.StyledButton>\r\n                  <ST.SendIcon type=\"send\" size={IconSize.XL} />\r\n                </ST.StyledButton>\r\n              </ST.ChatFooter>\r\n            </ST.Chat>\r\n            <ST.Footer>\r\n              {complaint.status === ComplaintStatus.RESOLVED || complaint.status === ComplaintStatus.CLOSED ? (\r\n                <Button fullWidth text=\"Открыть\" onClick={unresolveModal.open} />\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    fullWidth\r\n                    onClick={resolveModal.open}\r\n                    text=\"Решить\"\r\n                  />\r\n                  <Button\r\n                    fullWidth\r\n                    onClick={closeModal.open}\r\n                    variant={ButtonVariant.DANGER}\r\n                    text=\"Закрыть\"\r\n                  />\r\n                </>\r\n              )}\r\n\r\n            </ST.Footer>\r\n          </>\r\n        )}\r\n      </ST.Wrapper>\r\n      {\r\n        resolveModal.isOpen && (\r\n          <Dialog\r\n            type={DialogTypes.INFO}\r\n            closeHandler={resolveModal.close}\r\n            onConfirm={handleResolve}\r\n            actions={{\r\n              cancel: {\r\n                text: 'Отменить',\r\n                onClick: resolveModal.close,\r\n              },\r\n              submit: {\r\n                isLoading,\r\n                text: 'Решить',\r\n              }\r\n            }}\r\n          >\r\n            Вы действительно хотите сделать жалобу \"{complaintId}\" решенной?\r\n          </Dialog>\r\n        )\r\n      }\r\n      {\r\n        closeModal.isOpen && (\r\n          <Dialog\r\n            type={DialogTypes.WARNING}\r\n            closeHandler={closeModal.close}\r\n            onConfirm={handleClose}\r\n            actions={{\r\n              cancel: {\r\n                text: 'Отменить',\r\n                onClick: closeModal.close,\r\n              },\r\n              submit: {\r\n                isLoading,\r\n                text: 'Закрыть',\r\n              }\r\n            }}\r\n          >\r\n            Вы действительно хотите закрыть жалобу \"{complaintId}\"?\r\n          </Dialog>\r\n        )\r\n      }\r\n      {\r\n        unresolveModal.isOpen && (\r\n          <Dialog\r\n            type={DialogTypes.WARNING}\r\n            closeHandler={unresolveModal.close}\r\n            onConfirm={handleUnresovle}\r\n            actions={{\r\n              cancel: {\r\n                text: 'Отменить',\r\n                onClick: unresolveModal.close,\r\n              },\r\n              submit: {\r\n                isLoading,\r\n                text: 'Открыть',\r\n              }\r\n            }}\r\n          >\r\n            Вы действительно хотите открыть жалобу \"{complaintId}\"?\r\n          </Dialog>\r\n        )\r\n      }\r\n      {userId && (\r\n        <UserModal userId={userId} onClose={handleCloseUserModal} />\r\n      )}\r\n      {postId && (\r\n        <PostModal postId={postId} onClose={handleClosePostModal} />\r\n      )}\r\n    </SideModal>\r\n  )\r\n}\r\n","import { useFormik } from 'formik';\r\nimport { useDebounce, useMessageCallBack, useTags, useUsers } from '@src/hooks';\r\nimport { useEffect, useMemo, useState } from 'react';\r\nimport { SelectOption } from '@components/Select/hooks/useSearch';\r\nimport { CmSelectValue, COMPLAINT_TYPE_LABELS } from '@src/components';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { SortValue } from '@src/api/Posts/models';\r\nimport { ComplaintsApi } from '@src/api/Complaints/ComplaintsApi';\r\nimport {\r\n  ComplaintsSort,\r\n  ComplaintStatus,\r\n  ComplaintType,\r\n  IComplaint,\r\n  IComplaintMessage\r\n} from '@src/api/Complaints/models';\r\nimport { IDeleteMessage, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\nimport { useAuth } from '@providers/AuthProvider';\r\n\r\nexport interface IFilterPostsForm {\r\n  users?: SelectOption<string>;\r\n  types?: SelectOption<ComplaintType>;\r\n  status?: SelectOption<ComplaintStatus>;\r\n  sort: SelectOption<string, { key: string, value: string }>;\r\n}\r\n\r\nconst COMPLAINTS_LABELS: Record<ComplaintsSort, Record<SortValue, string>> = {\r\n  [ComplaintsSort.CREATED_AT]: {\r\n    [SortValue.ASC]: 'Сначала старые',\r\n    [SortValue.DESC]: 'Сначала новые',\r\n  },\r\n}\r\n\r\nconst sortOptions: SelectOption<string, { key: string, value: string }>[] = Object.values(ComplaintsSort).reduce((res, it) => {\r\n    return [...res, ...Object.values(SortValue).map(value => ({ value: `${it}_${value}`, label: COMPLAINTS_LABELS[it][value], meta: { key: it, value } }))];\r\n  }, [] as SelectOption<string, { key: string, value: string }>[]);\r\n\r\nexport const useFilters = () => {\r\n  const [activeComplaint, setActiveComplaint] = useState<IComplaint>();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [complaints, setComplaints] = useState<IComplaint[]>([]);\r\n  const { user } = useAuth();\r\n\r\n  const form = useFormik<IFilterPostsForm>({\r\n    initialValues: {\r\n      sort: sortOptions[0],\r\n    },\r\n\r\n    onSubmit: () => {}\r\n  })\r\n\r\n  const usersRes = useUsers();\r\n\r\n  useEffect(() => {\r\n    usersRes.getUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getComplaints()\r\n  }, [form.values.users, form.values.status, form.values.sort, form.values.types]);\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as IComplaintMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.COMPLAINT_MESSAGE) {\r\n      setComplaints(prev => prev.map(it => {\r\n        if (it.id === parsedMessage.complaintId && user?.id !== parsedMessage.user.id) {\r\n          if (activeComplaint?.id !== parsedMessage.complaintId) {\r\n            it.unreadableMessages += 1;\r\n          }\r\n        }\r\n        return { ...it };\r\n      }))\r\n    }\r\n  }, [complaints, user]);\r\n\r\n  const getComplaints = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const { users, status, sort, types } = form.values;\r\n      const res = await ComplaintsApi.fetchComplaints({\r\n        user: users?.value,\r\n        status: status?.value,\r\n        type: types?.value,\r\n        sort: sort.meta?.key,\r\n        sortValue: sort.meta?.value,\r\n      });\r\n      setComplaints(res.data);\r\n    } catch (e) {\r\n      toastError(e)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const usersOptions: SelectOption<string>[] = useMemo(() => {\r\n    return usersRes.users.map(it => ({ value: it.id, label: it.email, customize: { avatarSrc: it.avatar, avatarFirstName: it.firstName, avatarLastName: it.lastName } }))\r\n  }, [usersRes.users]);\r\n\r\n  const statusOptions: SelectOption<ComplaintStatus>[] = useMemo(() => {\r\n    return Object.values(ComplaintStatus).map(it => ({ value: it, label: it }))\r\n  }, []);\r\n\r\n  const typesOptions: SelectOption<ComplaintType>[] = useMemo(() => {\r\n    return Object.values(ComplaintType).map(it => ({ value: it, label: COMPLAINT_TYPE_LABELS[it] }))\r\n  }, []);\r\n\r\n  const createSelectChangeHandler = (field: string) => (value: CmSelectValue) => {\r\n    form.setFieldValue(field, value);\r\n  }\r\n\r\n  const reset = () => {\r\n    form.resetForm();\r\n  }\r\n\r\n  const onSetActiveComplaint = (complaint?: IComplaint) => {\r\n    if (complaint) {\r\n      setComplaints(prev => prev.map(it => it.id === complaint.id ? ({ ...it, unreadableMessages: 0 }) : it))\r\n    }\r\n    setActiveComplaint(complaint);\r\n  }\r\n\r\n  return {\r\n    form,\r\n    activeComplaint,\r\n    setActiveComplaint: onSetActiveComplaint,\r\n    usersOptions,\r\n    typesOptions,\r\n    usersRes,\r\n    sortOptions,\r\n    complaints,\r\n    statusOptions,\r\n    createSelectChangeHandler,\r\n    isLoading,\r\n    getComplaints,\r\n    reset,\r\n  }\r\n}\r\n","import { FC, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, Button, ButtonVariant, PageHeader, Select } from '@src/components';\r\nimport { ComplaintItem } from '@pages/Complaints/ComplaintItem';\r\nimport { ComplaintModal } from '@pages/Complaints/ComplaintModal';\r\nimport { useFilters } from '@pages/Complaints/useFilters';\r\nimport { IComplaint } from '@src/api/Complaints/models';\r\n\r\nconst Complaints: FC = () => {\r\n  const {\r\n    form,\r\n    getComplaints,\r\n    complaints,\r\n    typesOptions,\r\n    usersOptions,\r\n    usersRes,\r\n    createSelectChangeHandler,\r\n    isLoading,\r\n    statusOptions,\r\n    sortOptions,\r\n    reset,\r\n    setActiveComplaint,\r\n    activeComplaint,\r\n  } = useFilters();\r\n\r\n  const renderedComplaints = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!complaints.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Жалоб нет\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        {complaints.map(it => <ComplaintItem key={it.id} complaint={it} onClick={() => setActiveComplaint(it)} />)}\r\n      </ST.Content>\r\n    )\r\n  }, [complaints, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader\r\n        title=\"Жалобы\"\r\n        count={`${complaints.length} жалоб`}\r\n      />\r\n      <ST.Filters>\r\n        <Select value={form.values.types} options={typesOptions} onChange={createSelectChangeHandler('types')} placeholder=\"Выберите на что жалоба\" />\r\n        <Select value={form.values.users} options={usersOptions} loading={usersRes.isLoading} onChange={createSelectChangeHandler('users')} placeholder=\"Выберите автора\" />\r\n        <Select value={form.values.status} options={statusOptions} onChange={createSelectChangeHandler('status')} placeholder=\"Выберите статус\" />\r\n        <Select value={form.values.sort} options={sortOptions} onChange={createSelectChangeHandler('sort')} placeholder=\"Выберите сортировку\" />\r\n        <Button text=\"Сбросить\" onClick={reset} />\r\n      </ST.Filters>\r\n      {renderedComplaints}\r\n      {activeComplaint && <ComplaintModal complaintId={activeComplaint.id} onClose={() => setActiveComplaint(undefined)} refetch={getComplaints} />}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Complaints;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Dropdown } from '@components/Select/Dropdown';\r\n\r\nexport const Wrapper = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n  justify-content: ${({ isOwn }) => isOwn ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nexport const Content = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  position: relative;\r\n  gap: 10px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding: 8px 8px 4px 8px;\r\n  max-width: calc(50% - 10px);\r\n  border-radius: 5px;\r\n  background-color: ${({ isOwn }) => isOwn ? COLORS.blue30 : COLORS.lightGray30};\r\n`;\r\n\r\nexport const StyledDropDown = styled(Dropdown)`\r\n  width: 200px;\r\n  top: -43px !important;\r\n  left: -150px;\r\n  \r\n  & > div {\r\n    background: ${COLORS.blue20};\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  color: ${COLORS.gray90}\r\n`;\r\n","import React, { FC, useMemo, useRef } from 'react';\r\nimport { IMessage } from '@src/api/Dialogs/models';\r\nimport * as ST from './styled';\r\nimport { getTimeMessage } from '@src/utils/date';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { Avatar, AvatarSize, Button, ButtonVariant, Tooltip } from '@src/components';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { SocketApi } from '@src/api/SocketApi/SocketApi';\r\nimport { IComplaintMessage } from '@src/api/Complaints/models';\r\n\r\ninterface IProps {\r\n  withAvatar?: boolean;\r\n  message: IMessage | IComplaintMessage;\r\n}\r\n\r\nexport const Message: FC<IProps> = ({ message, withAvatar }) => {\r\n  const { user } = useAuth();\r\n  const refContainer = useRef<HTMLDivElement | null>(null);\r\n  const deleteModal = useModalControls();\r\n  const dropdown = useModalControls();\r\n\r\n  const isOwn = useMemo(() => message.user.id === user?.id, [message, user]);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if ('dialogId' in message) {\r\n      e.preventDefault();\r\n      if (isOwn) {\r\n        dropdown.open();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if ('dialogId' in message) {\r\n      SocketApi.deleteMessage({ messageId: message.id });\r\n      deleteModal.close()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ST.Wrapper isOwn={isOwn}>\r\n      <ST.Content ref={refContainer} isOwn={isOwn} onContextMenu={handleClick}>\r\n        <ST.Text>{message.text}</ST.Text>\r\n        <ST.Date>{getTimeMessage(message.updatedAt)}</ST.Date>\r\n        {dropdown.isOpen && (\r\n          <ST.StyledDropDown\r\n            selectionContainer={refContainer.current as HTMLDivElement}\r\n            onClose={dropdown.close}\r\n          >\r\n            <Button variant={ButtonVariant.DANGER} text=\"Удалить\" fullWidth onClick={deleteModal.open} />\r\n          </ST.StyledDropDown>\r\n        )}\r\n      </ST.Content>\r\n      {withAvatar && (\r\n        <Tooltip text={`${message.user.lastName} ${message.user.firstName}`}>\r\n          <Avatar\r\n            firstName={message.user.firstName}\r\n            lastName={message.user.lastName}\r\n            fullName={message.user.email}\r\n            src={message.user.avatar}\r\n            size={AvatarSize.XXL}\r\n          />\r\n        </Tooltip>\r\n      )}\r\n\r\n      {deleteModal.isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={deleteModal.close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: deleteModal.close,\r\n            },\r\n            submit: {\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить сообщение?\r\n        </Dialog>\r\n      )}\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport ReactPlayer from 'react-player';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 18px;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const BanWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const BanText = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: -0.014em;\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n\r\nexport const Video = styled(ReactPlayer)`\r\n  width: 100% !important;\r\n`\r\n\r\nexport const CommentsText = styled.div`\r\n  font-size: 17px;\r\n  padding-bottom: 5px;\r\n  border-bottom: 1px solid ${COLORS.lightGray40};\r\n`\r\n\r\nexport const Comments = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const InfoItem = styled.div`\r\n  display: flex;\r\n  color: ${COLORS.gray70};\r\n  width: fit-content;\r\n  gap: 6px;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${COLORS.gray90};\r\n`;\r\n\r\nexport const BanInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  border-radius: 6px;\r\n  padding: 6px;\r\n  color: ${COLORS.red90};\r\n  background-color: ${COLORS.red30};\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport {\r\n  AppLoader,\r\n  Avatar,\r\n  Button,\r\n  ButtonVariant,\r\n  Comment,\r\n  InfoItem,\r\n  Input,\r\n  SideModal,\r\n  Status,\r\n  TextShorter,\r\n  VideoPlayer\r\n} from '@src/components';\r\nimport { UserStatus } from '@src/api/Users/models';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { IPostDetail } from '@src/api/Posts/models';\r\nimport { PostsApi } from '@src/api/Posts/PostsApi';\r\nimport { Tag } from '@components/Tag';\r\nimport { getTime } from '@src/utils/date';\r\nimport { Icon, IconSize } from '@components/Icon';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { RoleType } from '@src/api/Roles/models';\r\n\r\ninterface IProps {\r\n  postId: string;\r\n  onClose: () => void;\r\n  refetch?: () => void;\r\n}\r\n\r\nexport const PostModal: FC<IProps> = ({onClose, refetch, postId }) => {\r\n  const { user } = useAuth();\r\n  const [post, setPost] = useState<IPostDetail>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const banModal = useModalControls();\r\n  const deleteModal = useModalControls();\r\n  const [banReason, setBanReason] = useState('');\r\n\r\n  const isAdmin = user?.roles.map(it => it.value).includes(RoleType.ADMIN) || false;\r\n\r\n  const isActive = post?.status === UserStatus.ACTIVE;\r\n\r\n  const fetchPost = async () => {\r\n    try {\r\n      const res = await PostsApi.fetchPostDetail(postId);\r\n      setPost(res.data)\r\n    } catch (e) {\r\n      toastError(e);\r\n    }\r\n  }\r\n\r\n  const handleBlockUnBlock = async () => {\r\n    try {\r\n      if (post) {\r\n        setIsLoading(true);\r\n        if (isActive) {\r\n          const res = await PostsApi.banPost({ id: post.id, text: banReason });\r\n          toastSuccess(res.data.message);\r\n        } else {\r\n          const res = await PostsApi.unbanPost(post.id)\r\n          toastSuccess(res.data.message);\r\n        }\r\n        refetch?.()\r\n        banModal.close();\r\n        onClose();\r\n      }\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      if (post) {\r\n        setIsLoading(true);\r\n        const res = await PostsApi.deletePost(postId);\r\n        toastSuccess(res.data.message);\r\n\r\n        refetch?.()\r\n        deleteModal.close();\r\n        onClose();\r\n      }\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n  }, [postId]);\r\n\r\n  return (\r\n    <SideModal\r\n      titleText={post && (\r\n        <ST.Header>\r\n          <ST.Title>\r\n            <TextShorter tooltip>\r\n              {post.title} ({post.id})\r\n            </TextShorter>\r\n          </ST.Title>\r\n          <Status status={post.status} />\r\n          <ST.InfoItem>\r\n            <Icon type=\"eye\" size={IconSize.LG} />\r\n            {post.views}\r\n          </ST.InfoItem>\r\n          <ST.InfoItem>\r\n            <Icon type=\"star-filled\" size={IconSize.LG} />\r\n            {post.favoriteCount}\r\n          </ST.InfoItem>\r\n          <ST.InfoItem>\r\n            <Icon type=\"message\" size={IconSize.LG} />\r\n            {post.commentsCount}\r\n          </ST.InfoItem>\r\n        </ST.Header>\r\n      )}\r\n      onClose={onClose}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Wrapper>\r\n        {post ? (\r\n          <>\r\n            <InfoItem\r\n              text=\"ID:\"\r\n              info={(\r\n                <>\r\n                  {post.id}\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Заголовок:\"\r\n              info={(\r\n                <>\r\n                  {post.title}\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Автор:\"\r\n              info={(\r\n                <>\r\n                  <Avatar\r\n                    firstName={post.user.firstName}\r\n                    lastName={post.user.lastName}\r\n                    src={post.user.avatar}\r\n                  />\r\n                  {post.user.lastName} {post.user.firstName} ({post.user.email})\r\n                </>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Создан:\"\r\n              info={getTime(post?.createdAt)}\r\n            />\r\n            <InfoItem\r\n              text=\"Обновлен:\"\r\n              info={getTime(post?.updatedAt)}\r\n            />\r\n            <InfoItem\r\n              text=\"Теги:\"\r\n              info={(\r\n                <ST.Info>\r\n                  {post.tags.map(it => <Tag key={it.id} tag={it} />)}\r\n                </ST.Info>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Краткое описание:\"\r\n              info={(\r\n                <ST.Description>\r\n                  {post.shortDescription}\r\n                </ST.Description>\r\n              )}\r\n            />\r\n            <InfoItem\r\n              text=\"Описание:\"\r\n              info={(\r\n                <ST.Description>\r\n                  {post.description}\r\n                </ST.Description>\r\n              )}\r\n            />\r\n            {post.banReason && (\r\n              <InfoItem\r\n                text=\"Причина блокировки:\"\r\n                info={(\r\n                  <ST.BanInfoWrapper>\r\n                    {post.banReason.text}\r\n                  </ST.BanInfoWrapper>\r\n                )}\r\n              />\r\n            )}\r\n            {post.banReason && (\r\n              <InfoItem\r\n                text=\"Кто заблокировал:\"\r\n                info={(\r\n                  <>\r\n                    <Avatar\r\n                      firstName={post.banReason.user.firstName}\r\n                      lastName={post.banReason.user.lastName}\r\n                      src={post.banReason.user.avatar}\r\n                    />\r\n                    {post.banReason.user.lastName} {post.banReason.user.firstName} ({post.banReason.user.email})\r\n                  </>\r\n                )}\r\n              />\r\n            )}\r\n            <VideoPlayer\r\n              url={post.videoUrl}\r\n            />\r\n            <ST.Comments>\r\n              <ST.CommentsText>\r\n                Комментарии\r\n              </ST.CommentsText>\r\n              {post.comments.map(it => <Comment key={it.id} comment={it} />)}\r\n            </ST.Comments>\r\n            <ST.Footer>\r\n              {[UserStatus.BANNED, UserStatus.DELETED].includes(post.status) && isAdmin && (\r\n                <Button\r\n                  fullWidth\r\n                  onClick={deleteModal.open}\r\n                  variant={ButtonVariant.DANGER}\r\n                  text=\"Удалить\"\r\n                />\r\n              )}\r\n              <Button\r\n                fullWidth\r\n                onClick={banModal.open}\r\n                variant={isActive ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n                text={isActive ? 'Заблокировать' : 'Разблокировать'}\r\n              />\r\n            </ST.Footer>\r\n          </>\r\n        ) : (\r\n          <AppLoader />\r\n        )}\r\n      </ST.Wrapper>\r\n      {banModal.isOpen && (\r\n        <Dialog\r\n          type={isActive ? DialogTypes.WARNING : DialogTypes.ANSWER}\r\n          closeHandler={banModal.close}\r\n          onConfirm={handleBlockUnBlock}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: banModal.close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: isActive ? 'Заблокировать' : 'Разблокировать',\r\n            }\r\n          }}\r\n        >\r\n          <ST.BanWrapper>\r\n            <ST.BanText>\r\n              Вы действительно хотите {isActive ? 'заблокировать' : 'разблокировать'} пост \"{post?.title}\"?\r\n            </ST.BanText>\r\n            {isActive && <Input value={banReason} onChange={e => setBanReason(e.target.value)} placeholder=\"Введите причину\" />}\r\n          </ST.BanWrapper>\r\n        </Dialog>\r\n      )}\r\n      {deleteModal.isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={deleteModal.close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: deleteModal.close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить пост \"{post?.title}\"?\r\n        </Dialog>\r\n      )}\r\n    </SideModal>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Avatar, Textarea } from '@src/components';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 18px;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n`;\r\n\r\nexport const StyledTextArea = styled(Textarea)`\r\n  width: 100%;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const BanWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const BanText = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  letter-spacing: -0.014em;\r\n`;\r\n\r\nexport const HeaderInfo = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Email = styled.div`\r\n  display: flex;\r\n  color: ${COLORS.gray90};\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    background-color: ${COLORS.lightGray10};\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n\r\nexport const BanInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  border-radius: 6px;\r\n  padding: 6px;\r\n  color: ${COLORS.red90};\r\n  background-color: ${COLORS.red30};\r\n`;\r\n","import React, { FC, useEffect, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport {\r\n  AppLoader,\r\n  Avatar,\r\n  AvatarSize,\r\n  Button,\r\n  ButtonVariant,\r\n  CmSelectValue,\r\n  InfoItem, Input,\r\n  Role,\r\n  Select,\r\n  SideModal,\r\n  Status, Textarea\r\n} from '@src/components';\r\nimport { IUser, UserStatus } from '@src/api/Users/models';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { UsersApi } from '@src/api/Users/UsersApi';\r\nimport { handleFormError, toastError, toastSuccess } from '@src/utils/toast';\r\nimport { getTime } from '@src/utils/date';\r\nimport { useFormik } from 'formik';\r\nimport { SelectOption } from '@components/Select/hooks/useSearch';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport { useRenderIfRole } from '@src/utils/roles';\r\nimport { RoleType } from '@src/api/Roles/models';\r\nimport { Icon } from '@components/Icon';\r\nimport { useDialogsContext } from '@providers/DialogsProvider/DialogsContext';\r\n\r\ninterface IProps {\r\n  userId: string;\r\n  onClose: () => void;\r\n  refetch?: () => void;\r\n}\r\n\r\ninterface IForm {\r\n  roles: SelectOption<string>[];\r\n}\r\n\r\nexport const UserModal: FC<IProps> = ({onClose, refetch, userId }) => {\r\n  const [user, setUser] = useState<IUser>();\r\n  const { createDialog } = useDialogsContext();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isChangeLoading, setIsChangeLoading] = useState(false);\r\n  const [banReason, setBanReason] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const banModal = useModalControls();\r\n  const newMessageModal = useModalControls();\r\n  const [isRolesLoading, setIsRolesLoading] = useState(true);\r\n  const [roleOptions, setRoleOptions] = useState<SelectOption<string>[]>([]);\r\n  const { execIf } = useRenderIfRole();\r\n\r\n  const form = useFormik<IForm>({\r\n    initialValues: {\r\n      roles: user?.roles.map(it => ({ value: it.id, label: it.value })) || []\r\n    },\r\n    onSubmit: async (values, { resetForm }) => {\r\n      try {\r\n        setIsChangeLoading(true);\r\n        await UsersApi.changeRoles({ roles: values.roles.map(it => it.value), userId: userId });\r\n        refetch?.();\r\n        setIsEdit(false);\r\n        resetForm();\r\n        toastSuccess('Роли успешно изменены');\r\n      } catch (e) {\r\n        toastError(e);\r\n      } finally {\r\n        setIsChangeLoading(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const isActive = user?.status === UserStatus.ACTIVE;\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await UsersApi.fetchUser(userId);\r\n      await form.setFieldValue('roles', res.data?.roles.map(it => ({ value: it.id, label: it.value })))\r\n\r\n      setUser(res.data)\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleConfirmCreateDialog = () => {\r\n    createDialog({ userId: userId, text: message });\r\n  }\r\n\r\n  const handleBlockUnBlock = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      if (isActive) {\r\n        const res = await UsersApi.banUser({ id: userId, text: banReason });\r\n        toastSuccess(res.data.message);\r\n      } else {\r\n        const res = await UsersApi.unbanUser(userId)\r\n        toastSuccess(res.data.message);\r\n      }\r\n      refetch?.()\r\n      banModal.close();\r\n      onClose();\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const loadRoles = async () => {\r\n    try {\r\n      setIsRolesLoading(true);\r\n      const res = await RolesApi.fetchRoles();\r\n      setRoleOptions(res.data.map(it => ({ value: it.id, label: it.value })));\r\n    } catch (e) {\r\n      handleFormError(e, form);\r\n    } finally {\r\n      setIsRolesLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleChangeRoles = (value: CmSelectValue) => {\r\n    form.setFieldValue('roles', value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadRoles()\r\n    getUser()\r\n  }, []);\r\n\r\n  const handleCloseEdit = () => {\r\n    setIsEdit(false);\r\n    form.resetForm();\r\n  }\r\n\r\n  const handleOpenEdit = () => {\r\n    setIsEdit(true);\r\n    form.setFieldValue('roles', user?.roles.map(it => ({ value: it.id, label: it.value })))\r\n  }\r\n\r\n  const renderedContent = useMemo(() => {\r\n    if (isLoading || !user) {\r\n      return <AppLoader />\r\n    }\r\n\r\n    if (isEdit) {\r\n      return (\r\n        <ST.Form onSubmit={form.handleSubmit}>\r\n          <Select\r\n            placeholder=\"Выберите роли\"\r\n            caption=\"Роли\"\r\n            multi\r\n            options={roleOptions}\r\n            loading={isRolesLoading}\r\n            value={form.values.roles}\r\n            onChange={handleChangeRoles}\r\n          />\r\n          <ST.Footer>\r\n            <Button text=\"Сохранить\" fullWidth isLoading={isChangeLoading} />\r\n            <Button text=\"Отменить\" variant={ButtonVariant.OUTLINE} fullWidth onClick={handleCloseEdit} />\r\n          </ST.Footer>\r\n        </ST.Form>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ST.HeaderInfo>\r\n          <Avatar\r\n            userId={user?.id}\r\n            firstName={user?.firstName}\r\n            lastName={user?.lastName}\r\n            src={user?.avatar}\r\n            size={AvatarSize.EXTRA}\r\n            figure={'square'}\r\n          />\r\n          <ST.Name>{user?.lastName} {user?.firstName}</ST.Name>\r\n          <Status status={user?.status}/>\r\n        </ST.HeaderInfo>\r\n        <InfoItem\r\n          text=\"ID:\"\r\n          info={user?.id}\r\n        />\r\n        <InfoItem\r\n          text=\"Роли:\"\r\n          info={(\r\n            <ST.Roles>\r\n              {user?.roles.map(it => (\r\n                <Role key={it.id} role={it.value}/>\r\n              ))}\r\n            </ST.Roles>\r\n          )}\r\n        />\r\n        <InfoItem\r\n          text=\"Почта:\"\r\n          info={<ST.Email>{user?.email}</ST.Email>}\r\n        />\r\n        <InfoItem\r\n          text=\"Статус почты:\"\r\n          info={<Status status={user?.isConfirmedEmail ? UserStatus.ACTIVE : UserStatus.BANNED}>{user?.isConfirmedEmail ? 'Подтверждена' : 'Не подтверждена'}</Status>}\r\n        />\r\n        <InfoItem\r\n          text=\"Создан:\"\r\n          info={getTime(user?.createdAt)}\r\n        />\r\n        <InfoItem\r\n          text=\"Обновлен:\"\r\n          info={getTime(user?.updatedAt)}\r\n        />\r\n        {user.banReason && (\r\n          <InfoItem\r\n            text=\"Причина блокировки:\"\r\n            info={(\r\n              <ST.BanInfoWrapper>\r\n                {user.banReason.text}\r\n              </ST.BanInfoWrapper>\r\n            )}\r\n          />\r\n        )}\r\n        {user.banReason && (\r\n          <InfoItem\r\n            text=\"Кто заблокировал:\"\r\n            info={(\r\n              <>\r\n                <Avatar\r\n                  firstName={user.banReason.user.firstName}\r\n                  lastName={user.banReason.user.lastName}\r\n                  src={user.banReason.user.avatar}\r\n                />\r\n                {user.banReason.user.lastName} {user.banReason.user.firstName} ({user.banReason.user.email})\r\n              </>\r\n            )}\r\n          />\r\n        )}\r\n        <ST.Footer>\r\n          {execIf(RoleType.ADMIN, <Button text=\"Изменить роли\" fullWidth onClick={handleOpenEdit}/>)}\r\n          <Button\r\n            fullWidth\r\n            onClick={banModal.open}\r\n            variant={isActive ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n            text={isActive ? 'Заблокировать' : 'Разблокировать'}\r\n          />\r\n        </ST.Footer>\r\n      </>\r\n    )\r\n  }, [isEdit, isActive, user, isChangeLoading, form, isRolesLoading, roleOptions, isLoading]);\r\n\r\n  return (\r\n    <SideModal\r\n      titleText={(\r\n        <ST.Header>\r\n          <ST.Title>Профиль</ST.Title>\r\n          <Button\r\n            text=\"Написать сообщение\"\r\n            onClick={newMessageModal.open}\r\n          />\r\n        </ST.Header>\r\n      )}\r\n      onClose={onClose}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Wrapper>\r\n        {renderedContent}\r\n      </ST.Wrapper>\r\n      {banModal.isOpen && (\r\n        <Dialog\r\n          type={isActive ? DialogTypes.WARNING : DialogTypes.ANSWER}\r\n          closeHandler={banModal.close}\r\n          onConfirm={handleBlockUnBlock}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: banModal.close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: isActive ? 'Заблокировать' : 'Разблокировать',\r\n            }\r\n          }}\r\n        >\r\n          <ST.BanWrapper>\r\n            <ST.BanText>\r\n              Вы действительно хотите {isActive ? 'заблокировать' : 'разблокировать'} пользователя {user?.lastName} {user?.firstName} ({user?.email})?\r\n            </ST.BanText>\r\n            {isActive && <Input value={banReason} onChange={e => setBanReason(e.target.value)} placeholder=\"Введите причину\" />}\r\n          </ST.BanWrapper>\r\n        </Dialog>\r\n      )}\r\n      {newMessageModal.isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.INFO}\r\n          closeHandler={newMessageModal.close}\r\n          onConfirm={handleConfirmCreateDialog}\r\n          title=\"Написать сообщение\"\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: newMessageModal.close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: 'Написать сообщение',\r\n            }\r\n          }}\r\n        >\r\n          <ST.StyledTextArea placeholder=\"Введите сообщение\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n        </Dialog>\r\n      )}\r\n    </SideModal>\r\n  )\r\n}\r\n","import { RoleType } from '@src/api/Roles/models';\r\nimport { useAuth } from '@providers/AuthProvider';\r\n\r\nexport const useRenderIfRole = () => {\r\n  const { user } = useAuth();\r\n\r\n  const execIf = (role: RoleType, content: any) => {\r\n    if (!user?.roles.map(it => it.value).includes(role)) {\r\n      return null;\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  return {\r\n    execIf\r\n  }\r\n}\r\n\r\n"],"names":["PostsApi","_classCallCheck","_createClass","key","value","params","instance","id","concat","_ref","dto","_objectWithoutProperties","_excluded","PostsSort","SortValue","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Tag","tag","_jsx","ST","style","AVATAR_COLORS_SUBTLE","getRadixTransformation","slice","children","Content","_templateObject2","EmptyText","_templateObject3","Filters","_templateObject4","COLORS","Header","Info","Title","_templateObject5","MessagesCount","_templateObject6","Description","_templateObject7","ComplaintItem","complaint","onClick","_jsxs","unreadableMessages","TypeComplaint","type","StatusComplaint","status","Avatar","firstName","author","lastName","src","avatar","userId","email","text","Footer","ComplaintTarget","ScrollableContent","_templateObject8","NewMessage","_templateObject9","Chat","_templateObject10","ChatContent","_templateObject11","ChatFooter","_templateObject12","StyledButton","_templateObject13","SendIcon","Icon","_templateObject14","_templateObject15","_templateObject16","ComplaintsApi","ComplaintModal","onClose","refetch","complaintId","_useState","useState","_useState2","_slicedToArray","setComplaint","_useState3","_useState4","messages","setMessages","currentUser","useAuth","user","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isInitialLoading","setIsInitialLoading","closeModal","useModalControls","resolveModal","unresolveModal","_useState9","_useState10","setUserId","_useState11","_useState12","postId","setPostId","_useState13","_useState14","showNewMessage","setShowNewMessage","chatRef","useRef","scrollToBottom","_chatRef$current","_chatRef$current2","current","scrollTo","scrollHeight","form","useFormik","initialValues","message","onSubmit","values","onSend","getComplaint","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","fetchComplaint","sent","data","t0","toastError","finish","stop","apply","arguments","handleResolve","_ref3","_callee2","_context2","fetchResolveComplaint","toastSuccess","close","handleClose","_ref4","_callee3","_context3","fetchCloseComplaint","handleUnresovle","_ref5","_callee4","_context4","fetchUnresolveComplaint","SocketApi","resetForm","useEffect","useMessageCallBack","_chatRef$current6","_chatRef$current7","_chatRef$current8","parsedMessage","JSON","parse","event","MessageEvents","_toConsumableArray","messageId","clientHeight","scrollTop","useLayoutEffect","_chatRef$current9","_chatRef$current10","_chatRef$current11","lastMsg","length","scroll","renderedContent","useMemo","map","it","Message","withAvatar","SideModal","titleText","TextShorter","tooltip","closeOnDocumentClick","AppLoader","_Fragment","InfoItem","info","ComplaintType","_complaint$post","post","title","_complaint$user","getTime","createdAt","updatedAt","whoResolve","ComplaintStatus","ref","onScroll","_chatRef$current3","_chatRef$current4","_chatRef$current5","handleSubmit","Textarea","name","onChange","handleChange","placeholder","onEnter","size","IconSize","Button","fullWidth","open","variant","ButtonVariant","isOpen","Dialog","DialogTypes","closeHandler","onConfirm","actions","cancel","submit","UserModal","undefined","PostModal","COMPLAINTS_LABELS","_defineProperty","ComplaintsSort","_ComplaintsSort$CREAT","sortOptions","Object","reduce","label","meta","useFilters","activeComplaint","setActiveComplaint","complaints","setComplaints","sort","usersRes","useUsers","getUsers","getComplaints","users","types","_objectSpread","_sort$meta","_sort$meta2","_form$values","fetchComplaints","sortValue","usersOptions","customize","avatarSrc","avatarFirstName","avatarLastName","statusOptions","typesOptions","COMPLAINT_TYPE_LABELS","createSelectChangeHandler","field","setFieldValue","reset","_useFilters","renderedComplaints","PageHeader","count","Select","options","loading","isOwn","StyledDropDown","Dropdown","Text","Date","refContainer","deleteModal","dropdown","onContextMenu","e","preventDefault","getTimeMessage","selectionContainer","Tooltip","fullName","AvatarSize","BanWrapper","BanText","CommentsText","ReactPlayer","Comments","BanInfoWrapper","setPost","banModal","banReason","setBanReason","isAdmin","roles","includes","RoleType","isActive","UserStatus","fetchPost","handleBlockUnBlock","_res","handleDelete","Status","views","favoriteCount","commentsCount","tags","shortDescription","description","VideoPlayer","url","videoUrl","comments","Comment","comment","Input","target","StyledTextArea","Form","HeaderInfo","Roles","Email","Name","setUser","createDialog","useDialogsContext","isEdit","setIsEdit","isChangeLoading","setIsChangeLoading","setMessage","newMessageModal","isRolesLoading","setIsRolesLoading","_useState15","_useState16","roleOptions","setRoleOptions","execIf","useRenderIfRole","_onSubmit","UsersApi","_x","_x2","getUser","_res$data","loadRoles","RolesApi","handleFormError","handleChangeRoles","handleCloseEdit","handleOpenEdit","caption","multi","figure","Role","role","isConfirmedEmail","content"],"sourceRoot":""}