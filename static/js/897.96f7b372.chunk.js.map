{"version":3,"file":"static/js/897.96f7b372.chunk.js","mappings":"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","sources":["pages/Dialogs/styled.ts","pages/Dialogs/DialogItem/styled.ts","pages/Dialogs/DialogItem/index.tsx","pages/Dialogs/ActiveDialog/styled.ts","pages/Dialogs/Message/styled.ts","pages/Dialogs/Message/index.tsx","pages/Dialogs/ActiveDialog/index.tsx","pages/Dialogs/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ScrollableContent = styled.div<{ hasActive?: boolean }>`\r\n  max-width: ${({ hasActive }) => hasActive ? '400px' : '100%'};\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const DialogsContainer = styled.div<{ hasActive?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: ${({ hasActive }) => hasActive ? '400px' : '100%'};\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  border-right: ${({ hasActive }) => hasActive ? `1px solid ${COLORS.lightGray40}` : 'none'};\r\n  background: ${COLORS.white};\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { TextShorter } from '@src/components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 12px;\r\n  cursor: pointer;\r\n  height: fit-content;\r\n  transition: background-color .3s;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.blue20};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  gap: 5px;\r\n`;\r\n\r\nexport const Text = styled(TextShorter)`\r\n  white-space: nowrap;\r\n  color: ${COLORS.gray90};\r\n  min-width: 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const NewMessages = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 20px;\r\n  min-width: 20px;\r\n  height: 20px;\r\n  min-height: 20px;\r\n  background-color: ${COLORS.blue60};\r\n  color: ${COLORS.white};\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled(TextShorter)`\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  color: ${COLORS.gray90};\r\n`;\r\n","import { FC } from 'react';\r\nimport { IDialogListItem } from '@src/api/Dialogs/models';\r\nimport * as ST from './styled';\r\nimport { Avatar, AvatarSize, TextShorter } from '@src/components';\r\nimport { getTimeMessage } from '@src/utils/date';\r\n\r\ninterface IProps {\r\n  dialog: IDialogListItem;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const DialogItem: FC<IProps> = ({ dialog, onClick }) => {\r\n  return (\r\n    <ST.Wrapper onClick={onClick}>\r\n      <Avatar\r\n        userId={dialog.user.id}\r\n        firstName={dialog.user.firstName}\r\n        lastName={dialog.user.lastName}\r\n        src={dialog.user.avatar}\r\n        size={AvatarSize.XXXL}\r\n      />\r\n      <ST.Content>\r\n        <ST.Header>\r\n          <ST.Title tooltip>\r\n            {dialog.user.lastName} {dialog.user.firstName} ({dialog.user.email})\r\n          </ST.Title>\r\n\r\n          <ST.Date>\r\n            {getTimeMessage(dialog.lastMessage.updatedAt)}\r\n          </ST.Date>\r\n        </ST.Header>\r\n        <ST.Header>\r\n          <ST.Text>\r\n            {dialog.lastMessage.text}\r\n          </ST.Text>\r\n          {Boolean(dialog.unreadableMessages) && (\r\n            <ST.NewMessages>\r\n              {dialog.unreadableMessages}\r\n            </ST.NewMessages>\r\n          )}\r\n        </ST.Header>\r\n      </ST.Content>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  min-height: 100%;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const NewMessage = styled.div`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  bottom: 20px;\r\n  left: calc(50% - 69px);\r\n  display: flex;\r\n  padding: 4px 8px;\r\n  border-radius: 5px;\r\n  color: ${COLORS.lightGray10};\r\n  background-color: ${COLORS.blue60};\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.blue70};\r\n  }\r\n\r\n  &:active,\r\n  &.active {\r\n    background-color: ${COLORS.blue80};\r\n  }\r\n`;\r\n\r\nexport const NewMessageWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ScrollableContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.form`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-top: 1px solid ${COLORS.lightGray40};\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background: transparent;\r\n`;\r\n\r\nexport const SendIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color .3s;\r\n  \r\n  &:hover {\r\n    color: ${COLORS.blue60};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid ${COLORS.lightGray40};\r\n  box-shadow: 0 7px 15px rgba(0,0,0,.05);\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: ${({ isOwn }) => isOwn ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nexport const Content = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  gap: 10px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding: 8px 8px 4px 8px;\r\n  max-width: calc(50% - 10px);\r\n  border-radius: 5px;\r\n  background-color: ${({ isOwn }) => isOwn ? COLORS.blue30 : COLORS.lightGray30};\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  color: ${COLORS.gray90}\r\n`;\r\n","import { FC, useMemo } from 'react';\r\nimport { IMessage } from '@src/api/Dialogs/models';\r\nimport * as ST from './styled';\r\nimport { getTimeMessage } from '@src/utils/date';\r\nimport { useAuth } from '@providers/AuthProvider';\r\n\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\n\r\nexport const Message: FC<IProps> = ({ message }) => {\r\n  const { user } = useAuth();\r\n\r\n  const isOwn = useMemo(() => message.user.id === user?.id, [message, user]);\r\n\r\n  return (\r\n    <ST.Wrapper isOwn={isOwn}>\r\n      <ST.Content isOwn={isOwn}>\r\n        <ST.Text>{message.text}</ST.Text>\r\n        <ST.Date>{getTimeMessage(message.updatedAt)}</ST.Date>\r\n      </ST.Content>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import { FC, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\r\nimport { IUser } from '@src/api/Users/models';\r\nimport * as ST from './styled';\r\nimport { AppLoader, Avatar, AvatarSize, Button, Textarea } from '@src/components';\r\nimport { Icon, IconSize } from '@components/Icon';\r\nimport { IMessage, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { DialogsApi } from '@src/api/Dialogs/DialogsApi';\r\nimport { Message } from '@pages/Dialogs/Message';\r\nimport { SocketApi } from '@src/api/SocketApi/SocketApi';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\nimport { useMessageCallBack } from '@src/hooks';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface IProps {\r\n  dialogId: string;\r\n  user: IUser;\r\n  onBack?: () => void;\r\n}\r\n\r\nexport const ActiveDialog: FC<IProps> = ({ dialogId, user, onBack }) => {\r\n  const { user: currentUser } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [messages, setMessages] = useState<IMessage[]>([]);\r\n  const scrollRef = useRef<HTMLDivElement | null>(null);\r\n  const [showNewMessage, setShowNewMessage] = useState(false);\r\n  const form = useFormik({\r\n    initialValues: {\r\n      message: ''\r\n    },\r\n    onSubmit: (values) => {\r\n      onSend(values.message)\r\n    }\r\n  });\r\n\r\n  const onSend = (message: string) => {\r\n    SocketApi.sendMessage({\r\n      dialogId,\r\n      text: message,\r\n    });\r\n    form.resetForm();\r\n  }\r\n\r\n  const getDialog = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await DialogsApi.fetchDialogInfo(dialogId);\r\n\r\n      setMessages(res.data.messages);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as ISocketMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.MESSAGE && parsedMessage.dialogId === dialogId) {\r\n      setMessages(prev => [...prev, parsedMessage]);\r\n\r\n      if (parsedMessage.user.id !== currentUser?.id) {\r\n        SocketApi.readMessage({ messageId: parsedMessage.id });\r\n        if (scrollRef.current) {\r\n          const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop\r\n          if (scroll >= 50) {\r\n            setShowNewMessage(true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [dialogId, currentUser]);\r\n\r\n  const scrollToBottom = () => {\r\n    scrollRef.current?.scrollTo(0, scrollRef.current?.scrollHeight)\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (scrollRef.current) {\r\n      const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop\r\n\r\n      if (scroll < 25) {\r\n        setShowNewMessage(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (scrollRef.current) {\r\n      const lastMsg = messages[messages.length - 1];\r\n      const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop;\r\n\r\n      if (lastMsg && lastMsg.user.id === currentUser?.id) {\r\n        scrollToBottom()\r\n      } else if (scroll < 50) {\r\n        scrollToBottom()\r\n      }\r\n    }\r\n\r\n  }, [messages]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isLoading) {\r\n      scrollToBottom()\r\n    }\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    getDialog();\r\n  }, [dialogId]);\r\n\r\n  const renderedContent = useMemo(() => {\r\n    if (isLoading) {\r\n      return <AppLoader/>\r\n    }\r\n\r\n    if (!messages.length) {\r\n      return 'Нет сообщений'\r\n    }\r\n\r\n    return messages.map((it) => <Message key={it.id} message={it} />)\r\n  }, [messages, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <ST.Header>\r\n        {onBack && (\r\n          <Button onClick={onBack}>\r\n            <Icon type=\"arrow-left\" />\r\n          </Button>\r\n        )}\r\n        <Avatar\r\n          userId={user.id}\r\n          firstName={user.firstName}\r\n          size={AvatarSize.XXXL}\r\n          lastName={user.lastName}\r\n          src={user.avatar}\r\n        />\r\n        <ST.Title>{user.lastName} {user.firstName} ({user.email})</ST.Title>\r\n      </ST.Header>\r\n      <ST.NewMessageWrapper>\r\n        <ST.ScrollableContent\r\n          ref={scrollRef}\r\n          onScroll={handleScroll}\r\n        >\r\n          <ST.Content>\r\n            {renderedContent}\r\n          </ST.Content>\r\n        </ST.ScrollableContent>\r\n        {showNewMessage && (\r\n          <ST.NewMessage onClick={scrollToBottom}>\r\n            Новое сообщение\r\n          </ST.NewMessage>\r\n        )}\r\n      </ST.NewMessageWrapper>\r\n\r\n      <ST.Footer onSubmit={form.handleSubmit}>\r\n        <Textarea\r\n          name=\"message\"\r\n          value={form.values.message}\r\n          onChange={form.handleChange}\r\n          placeholder=\"Введите сообщение\"\r\n          onEnter={() => onSend(form.values.message)}\r\n        />\r\n        <ST.StyledButton>\r\n          <ST.SendIcon type=\"send\" size={IconSize.XL} />\r\n        </ST.StyledButton>\r\n      </ST.Footer>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import { ChangeEventHandler, FC, useEffect, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { IDialogListItem, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { DialogsApi } from '@src/api/Dialogs/DialogsApi';\r\nimport { useDebounce, useMessageCallBack, useWindowWidth } from '@src/hooks';\r\nimport { DialogItem } from '@pages/Dialogs/DialogItem';\r\nimport { useDialogsContext } from '@providers/DialogsProvider/DialogsContext';\r\nimport { ActiveDialog } from '@pages/Dialogs/ActiveDialog';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\n\r\nconst Posts: FC = () => {\r\n  const { user } = useAuth();\r\n  const { newDialog, clearNewDialog, activeDialog, setActiveDialog } = useDialogsContext();\r\n  const [dialogs, setDialogs] = useState<IDialogListItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const debouncedSearch = useDebounce(search, 400);\r\n  const windowWidth = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (newDialog) {\r\n      const activeUser = newDialog.users.find(it => it.id !== user?.id);\r\n\r\n      if (activeUser) {\r\n        setActiveDialog({\r\n          id: newDialog.id,\r\n          user: activeUser,\r\n        });\r\n      }\r\n\r\n      clearNewDialog();\r\n    }\r\n  }, [newDialog]);\r\n\r\n  const handleChangeSearch: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const getDialogs = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await DialogsApi.fetchDialogs();\r\n\r\n      setDialogs(res.data);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDialogs()\r\n  }, [debouncedSearch]);\r\n\r\n  const handleBack = () => {\r\n    setActiveDialog(undefined);\r\n    getDialogs();\r\n  }\r\n\r\n  const showDialogs = useMemo(() => {\r\n    return windowWidth > 1010;\r\n  }, [windowWidth]);\r\n\r\n  const handleClickDialog = (dialog: IDialogListItem) => {\r\n    setActiveDialog(dialog);\r\n    setDialogs(prev => prev.map(it => {\r\n      if (it.id === dialog.id) {\r\n        it.unreadableMessages = 0;\r\n      }\r\n      return { ...it };\r\n    }))\r\n  }\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as ISocketMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.MESSAGE) {\r\n      if (!dialogs.find(it => it.id === parsedMessage.dialogId)) {\r\n        setDialogs(prev => [{ id: parsedMessage.dialogId, user: parsedMessage.user, unreadableMessages: 1, lastMessage: parsedMessage }, ...prev])\r\n      } else {\r\n        setDialogs(prev => prev.map(it => {\r\n          if (it.id === parsedMessage.dialogId && user?.id !== parsedMessage.user.id) {\r\n            if (activeDialog?.id !== parsedMessage.dialogId) {\r\n              it.unreadableMessages += 1;\r\n            }\r\n            it.lastMessage = parsedMessage;\r\n          }\r\n\r\n          if (it.id === parsedMessage.dialogId && user?.id === parsedMessage.user.id) {\r\n            it.lastMessage = { ...parsedMessage, read: true };\r\n          }\r\n          return { ...it };\r\n        }).sort((a, b) => Date.parse(b.lastMessage.updatedAt) - Date.parse(a.lastMessage.updatedAt)))\r\n      }\r\n    }\r\n  }, [dialogs, user]);\r\n\r\n  const renderedDialogs = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!dialogs.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Диалогов нет\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    if (activeDialog) {\r\n      return (\r\n        <ST.Content>\r\n          {showDialogs && (\r\n            <ST.ScrollableContent hasActive>\r\n              <ST.DialogsContainer hasActive>\r\n                {dialogs.map(it => <DialogItem key={it.id} dialog={it} onClick={() => handleClickDialog(it)} />)}\r\n              </ST.DialogsContainer>\r\n            </ST.ScrollableContent>\r\n          )}\r\n          <ActiveDialog dialogId={activeDialog.id} user={activeDialog.user} onBack={showDialogs ? undefined : handleBack} />\r\n        </ST.Content>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        <ST.ScrollableContent>\r\n          <ST.DialogsContainer>\r\n            {dialogs.map(it => <DialogItem key={it.id} dialog={it} onClick={() => handleClickDialog(it)} />)}\r\n          </ST.DialogsContainer>\r\n        </ST.ScrollableContent>\r\n      </ST.Content>\r\n    )\r\n  }, [dialogs, isLoading, activeDialog, showDialogs]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader title=\"Диалоги\" search={search} onChangeSearch={handleChangeSearch} />\r\n      {renderedDialogs}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Posts;\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","COLORS","ScrollableContent","_templateObject3","_ref","hasActive","DialogsContainer","_templateObject4","_ref2","_ref3","concat","EmptyText","_templateObject5","Header","Text","TextShorter","NewMessages","Title","_templateObject6","Date","_templateObject7","DialogItem","dialog","onClick","_jsxs","ST","children","_jsx","Avatar","userId","user","id","firstName","lastName","src","avatar","size","AvatarSize","tooltip","email","getTimeMessage","lastMessage","updatedAt","text","Boolean","unreadableMessages","NewMessage","NewMessageWrapper","Footer","StyledButton","SendIcon","Icon","_templateObject8","_templateObject9","_templateObject10","isOwn","Message","message","useAuth","useMemo","ActiveDialog","dialogId","onBack","currentUser","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","messages","setMessages","scrollRef","useRef","_useState5","_useState6","showNewMessage","setShowNewMessage","form","useFormik","initialValues","onSubmit","values","onSend","SocketApi","resetForm","getDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","DialogsApi","sent","data","t0","toastError","finish","stop","apply","arguments","useMessageCallBack","_scrollRef$current","_scrollRef$current2","_scrollRef$current3","parsedMessage","JSON","parse","event","MessageEvents","_toConsumableArray","messageId","current","scrollHeight","clientHeight","scrollTop","scrollToBottom","_scrollRef$current4","_scrollRef$current5","scrollTo","useLayoutEffect","_scrollRef$current9","_scrollRef$current10","_scrollRef$current11","lastMsg","length","scroll","useEffect","renderedContent","AppLoader","map","it","Button","type","ref","onScroll","_scrollRef$current6","_scrollRef$current7","_scrollRef$current8","handleSubmit","Textarea","name","value","onChange","handleChange","placeholder","onEnter","IconSize","_useDialogsContext","useDialogsContext","newDialog","clearNewDialog","activeDialog","setActiveDialog","dialogs","setDialogs","search","setSearch","debouncedSearch","useDebounce","windowWidth","useWindowWidth","activeUser","users","find","getDialogs","handleBack","undefined","showDialogs","handleClickDialog","_objectSpread","read","sort","a","b","renderedDialogs","PageHeader","title","onChangeSearch","e","target"],"sourceRoot":""}