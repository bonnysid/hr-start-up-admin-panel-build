{"version":3,"file":"static/js/231.2158a770.chunk.js","mappings":"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","sources":["components/Dialog/styled.ts","components/Dialog/index.tsx","pages/Tags/styled.ts","pages/Tags/CreateTagModal/styled.ts","pages/Tags/CreateTagModal/index.tsx","pages/Tags/TagItem/styled.ts","pages/Tags/UpdateTagModal/styled.ts","pages/Tags/UpdateTagModal/index.tsx","pages/Tags/TagItem/index.tsx","pages/Tags/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Button } from '@src/components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 50%;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 56px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledIcon = styled.div`\r\n  width: 56px;\r\n  height: 56px;\r\n  padding: 16px;\r\n  border-radius: 50%;\r\n  &.answer {\r\n    color: ${COLORS.yellow70};\r\n    background-color: ${COLORS.yellow30};\r\n  }\r\n  &.notification {\r\n    color: ${COLORS.green70};\r\n    background-color: ${COLORS.green30};\r\n  }\r\n  &.warning {\r\n    color: ${COLORS.red70};\r\n    background-color: ${COLORS.red30};\r\n  }\r\n  &.info {\r\n    color: ${COLORS.blue70};\r\n    background-color: ${COLORS.blue30};\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 600px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Close = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray150};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n  letter-spacing: -0.019em;\r\n`;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Icon, IconTypes } from '@components/Icon';\r\nimport { ButtonProps, ButtonVariant, Modal } from '@src/components';\r\n\r\nimport * as ST from './styled';\r\n\r\nexport enum DialogTypes {\r\n  ANSWER = 'answer',\r\n  NOTIFICATION = 'notification',\r\n  WARNING = 'warning',\r\n  INFO = 'info'\r\n}\r\n\r\ntype ActionType = React.ButtonHTMLAttributes<HTMLButtonElement> & ButtonProps;\r\n\r\ninterface IActionsTypes {\r\n  ok?: ActionType;\r\n  cancel?: ActionType;\r\n  submit?: ActionType;\r\n}\r\n\r\ninterface IDialogProps {\r\n  loading?: boolean;\r\n  classNamePrefix?: string;\r\n  className?: string;\r\n  title?: string;\r\n  type?: DialogTypes;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  onClose?: () => void;\r\n  onOk?: () => void;\r\n  actions?: IActionsTypes;\r\n  closeOnDocumentClick?: boolean;\r\n  closeOnEscape?: boolean;\r\n}\r\n\r\nconst dialogIcons: Record<DialogTypes, IconTypes> = {\r\n  answer: 'circle-warning',\r\n  notification: 'circle-information',\r\n  warning: 'warning',\r\n  info: 'circle-information',\r\n};\r\n\r\ninterface IProps extends IDialogProps, PropsWithChildren {\r\n  closeHandler: () => void;\r\n}\r\n\r\nconst Dialog: React.FC<IProps> = ({\r\n  loading,\r\n  className,\r\n  title,\r\n  type,\r\n  closeHandler,\r\n  onConfirm,\r\n  onOk,\r\n  actions,\r\n  children,\r\n}) => (\r\n  <Modal\r\n    open\r\n    onClose={closeHandler}\r\n  >\r\n    <ST.Container className={className}>\r\n      <ST.Close\r\n        onClick={closeHandler}\r\n      >\r\n        <Icon\r\n          type=\"close\"\r\n        />\r\n      </ST.Close>\r\n      <ST.Body>\r\n        {type && (\r\n          <ST.StyledIcon className={type}>\r\n            <Icon type={dialogIcons[type]} />\r\n          </ST.StyledIcon>\r\n        )}\r\n        {title && <ST.Title>{title}</ST.Title>}\r\n        <ST.Content>{children}</ST.Content>\r\n      </ST.Body>\r\n      <ST.Buttons>\r\n        {onConfirm ? (\r\n          <>\r\n            <ST.StyledButton\r\n              {...actions?.submit}\r\n              variant={type === DialogTypes.WARNING ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n              onClick={onConfirm}\r\n              isLoading={loading}\r\n              disabled={loading}\r\n            />\r\n            <ST.StyledButton\r\n              {...actions?.cancel}\r\n              id=\"ConfirmDialogCancel\"\r\n              variant={ButtonVariant.OUTLINE}\r\n              onClick={closeHandler}\r\n              disabled={loading}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ST.StyledButton\r\n            onClick={onOk}\r\n            isLoading={loading}\r\n            {...actions?.ok}\r\n          />\r\n        )}\r\n      </ST.Buttons>\r\n    </ST.Container>\r\n  </Modal>\r\n);\r\n\r\nexport { Dialog };\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 14px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { handleFormError, toastError, toastSuccess } from '@src/utils/toast';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface TagForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const CreateTagModal: FC<IProps> = ({ close, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<TagForm>({\r\n    initialValues: {\r\n      value: '',\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await TagsApi.fetchCreateTag(values.value);\r\n        toastSuccess(`Тег ${values.value} успешно создан`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        handleFormError(e, form)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Создание тега\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          onBlur={form.handleBlur}\r\n          value={form.values.value}\r\n          caption=\"Название тега\"\r\n          placeholder=\"Введите название тега\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Создать\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 10px;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.red60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.red80};\r\n  }\r\n`;\r\n\r\nexport const EditIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.darkGray110};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray140};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { ITag } from '@src/api/Tags/models';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  tag: ITag;\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface TagForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const UpdateTagModal: FC<IProps> = ({ close, refetch, tag }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<TagForm>({\r\n    initialValues: {\r\n      value: tag.value,\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await TagsApi.fetchUpdateTag(tag.id, values.value);\r\n        toastSuccess(`Тег ${values.value} успешно обновлен`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        toastError(e)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Изменение тега\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          value={form.values.value}\r\n          onBlur={form.handleBlur}\r\n          caption=\"Название тега\"\r\n          placeholder=\"Введите название тега\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Сохранить\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import { FC, useState } from 'react';\r\nimport { ITag } from '@src/api/Tags/models';\r\nimport * as ST from './styled';\r\nimport { IconSize } from '@components/Icon';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { UpdateTagModal } from '@pages/Tags/UpdateTagModal';\r\n\r\ninterface IProps {\r\n  refetch: () => void;\r\n  tag: ITag;\r\n}\r\n\r\nexport const TagItem: FC<IProps> = ({ tag, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { isOpen, open, close } = useModalControls();\r\n  const updateModal = useModalControls();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await TagsApi.fetchDeleteTag(tag.id);\r\n      refetch();\r\n      close();\r\n      toastSuccess(`Тег ${tag.value} успешно удален`);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <ST.Info>\r\n        {tag.value} ({tag.id})\r\n      </ST.Info>\r\n      <ST.Controls>\r\n        {tag.canDeleteEdit && <ST.EditIcon type={'edit'} size={IconSize.XL} onClick={updateModal.open} />}\r\n        {tag.canDeleteEdit && <ST.DeleteIcon type={'delete'} size={IconSize.XL} onClick={open} />}\r\n      </ST.Controls>\r\n      {isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить тег {tag.value}?\r\n        </Dialog>\r\n      )}\r\n      {updateModal.isOpen && (\r\n        <UpdateTagModal tag={tag} close={updateModal.close} refetch={refetch} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n","import { FC, useEffect, useMemo } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { useModalControls, useTags } from '@src/hooks';\r\nimport { CreateTagModal } from '@pages/Tags/CreateTagModal';\r\nimport { TagItem } from '@pages/Tags/TagItem';\r\n\r\n\r\n\r\nconst Tags: FC = () => {\r\n  const { isOpen, open, close } = useModalControls();\r\n  const { getTags, tags, isLoading } = useTags();\r\n\r\n  useEffect(() => {\r\n    getTags();\r\n  }, []);\r\n\r\n  const renderedTags = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!tags.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Тегов нету\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        {tags.map(it => <TagItem key={it.id} tag={it} refetch={getTags} />)}\r\n      </ST.Content>\r\n    )\r\n  }, [tags, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader\r\n        title=\"Теги\"\r\n        buttonText=\"Создать тег\"\r\n        onButtonClick={open}\r\n      />\r\n      {renderedTags}\r\n      {isOpen && (\r\n        <CreateTagModal close={close} refetch={getTags} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Tags;\r\n"],"names":["Buttons","styled","_templateObject","_taggedTemplateLiteral","StyledButton","Button","_templateObject2","Body","_templateObject3","StyledIcon","_templateObject4","COLORS","Content","_templateObject5","Container","_templateObject6","Close","_templateObject7","Title","_templateObject8","DialogTypes","dialogIcons","answer","notification","warning","info","Dialog","_ref","loading","className","title","type","closeHandler","onConfirm","onOk","actions","children","_jsx","Modal","open","onClose","_jsxs","ST","onClick","Icon","_Fragment","_objectSpread","submit","variant","WARNING","ButtonVariant","isLoading","disabled","cancel","id","ok","Wrapper","EmptyText","Form","Footer","VALIDATION_SCHEMA","yup","shape","value","required","CreateTagModal","close","refetch","_useState","useState","_useState2","_slicedToArray","setIsLoading","form","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","TagsApi","toastSuccess","concat","t0","handleFormError","finish","stop","_x","apply","arguments","SideModal","titleText","closeOnDocumentClick","handleSubmit","Input","name","onChange","handleChange","onBlur","handleBlur","caption","placeholder","isError","Boolean","errors","errorText","text","fullWidth","Info","Controls","DeleteIcon","EditIcon","UpdateTagModal","tag","toastError","TagItem","_useModalControls","useModalControls","isOpen","updateModal","handleDelete","_ref2","canDeleteEdit","size","IconSize","_useTags","useTags","getTags","tags","useEffect","renderedTags","useMemo","AppLoader","length","map","it","PageHeader","buttonText","onButtonClick"],"sourceRoot":""}