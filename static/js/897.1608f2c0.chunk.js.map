{"version":3,"file":"static/js/897.1608f2c0.chunk.js","mappings":"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","sources":["components/Dialog/styled.ts","components/Dialog/index.tsx","pages/Dialogs/styled.ts","pages/Dialogs/DialogItem/styled.ts","pages/Dialogs/DialogItem/index.tsx","pages/Dialogs/ActiveDialog/styled.ts","pages/Dialogs/Message/styled.ts","pages/Dialogs/Message/index.tsx","pages/Dialogs/ActiveDialog/index.tsx","pages/Dialogs/index.tsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Button } from '@src/components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledButton = styled(Button)`\r\n  width: 50%;\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  padding: 56px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const StyledIcon = styled.div`\r\n  width: 56px;\r\n  height: 56px;\r\n  padding: 16px;\r\n  border-radius: 50%;\r\n  &.answer {\r\n    color: ${COLORS.yellow70};\r\n    background-color: ${COLORS.yellow30};\r\n  }\r\n  &.notification {\r\n    color: ${COLORS.green70};\r\n    background-color: ${COLORS.green30};\r\n  }\r\n  &.warning {\r\n    color: ${COLORS.red70};\r\n    background-color: ${COLORS.red30};\r\n  }\r\n  &.info {\r\n    color: ${COLORS.blue70};\r\n    background-color: ${COLORS.blue30};\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 600px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Close = styled.div`\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray150};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 32px;\r\n  letter-spacing: -0.019em;\r\n`;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Icon, IconTypes } from '@components/Icon';\r\nimport { ButtonProps, ButtonVariant, Modal } from '@src/components';\r\n\r\nimport * as ST from './styled';\r\n\r\nexport enum DialogTypes {\r\n  ANSWER = 'answer',\r\n  NOTIFICATION = 'notification',\r\n  WARNING = 'warning',\r\n  INFO = 'info'\r\n}\r\n\r\ntype ActionType = React.ButtonHTMLAttributes<HTMLButtonElement> & ButtonProps;\r\n\r\ninterface IActionsTypes {\r\n  ok?: ActionType;\r\n  cancel?: ActionType;\r\n  submit?: ActionType;\r\n}\r\n\r\ninterface IDialogProps {\r\n  loading?: boolean;\r\n  classNamePrefix?: string;\r\n  className?: string;\r\n  title?: string;\r\n  type?: DialogTypes;\r\n  onConfirm?: () => void;\r\n  onCancel?: () => void;\r\n  onClose?: () => void;\r\n  onOk?: () => void;\r\n  actions?: IActionsTypes;\r\n  closeOnDocumentClick?: boolean;\r\n  closeOnEscape?: boolean;\r\n}\r\n\r\nconst dialogIcons: Record<DialogTypes, IconTypes> = {\r\n  answer: 'circle-warning',\r\n  notification: 'circle-information',\r\n  warning: 'warning',\r\n  info: 'circle-information',\r\n};\r\n\r\ninterface IProps extends IDialogProps, PropsWithChildren {\r\n  closeHandler: () => void;\r\n}\r\n\r\nconst Dialog: React.FC<IProps> = ({\r\n  loading,\r\n  className,\r\n  title,\r\n  type,\r\n  closeHandler,\r\n  onConfirm,\r\n  onOk,\r\n  actions,\r\n  children,\r\n}) => (\r\n  <Modal\r\n    open\r\n    closeOnDocumentClick={false}\r\n    onClose={closeHandler}\r\n  >\r\n    <ST.Container className={className}>\r\n      <ST.Close\r\n        onClick={closeHandler}\r\n      >\r\n        <Icon\r\n          type=\"close\"\r\n        />\r\n      </ST.Close>\r\n      <ST.Body>\r\n        {type && (\r\n          <ST.StyledIcon className={type}>\r\n            <Icon type={dialogIcons[type]} />\r\n          </ST.StyledIcon>\r\n        )}\r\n        {title && <ST.Title>{title}</ST.Title>}\r\n        <ST.Content>{children}</ST.Content>\r\n      </ST.Body>\r\n      <ST.Buttons>\r\n        {onConfirm ? (\r\n          <>\r\n            <ST.StyledButton\r\n              {...actions?.submit}\r\n              variant={type === DialogTypes.WARNING ? ButtonVariant.DANGER : ButtonVariant.FILLED}\r\n              onClick={onConfirm}\r\n              isLoading={loading}\r\n              disabled={loading}\r\n            />\r\n            <ST.StyledButton\r\n              {...actions?.cancel}\r\n              id=\"ConfirmDialogCancel\"\r\n              variant={ButtonVariant.OUTLINE}\r\n              onClick={closeHandler}\r\n              disabled={loading}\r\n            />\r\n          </>\r\n        ) : (\r\n          <ST.StyledButton\r\n            onClick={onOk}\r\n            isLoading={loading}\r\n            {...actions?.ok}\r\n          />\r\n        )}\r\n      </ST.Buttons>\r\n    </ST.Container>\r\n  </Modal>\r\n);\r\n\r\nexport { Dialog };\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ScrollableContent = styled.div<{ hasActive?: boolean }>`\r\n  max-width: ${({ hasActive }) => hasActive ? '400px' : '100%'};\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow-y: auto;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const DialogsContainer = styled.div<{ hasActive?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: ${({ hasActive }) => hasActive ? '400px' : '100%'};\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  border-right: ${({ hasActive }) => hasActive ? `1px solid ${COLORS.lightGray40}` : 'none'};\r\n  background: ${COLORS.white};\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { TextShorter } from '@src/components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 12px;\r\n  cursor: pointer;\r\n  height: fit-content;\r\n  transition: background-color .3s;\r\n  padding: 10px;\r\n  overflow: hidden;\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.blue20};\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  gap: 5px;\r\n`;\r\n\r\nexport const Text = styled(TextShorter)`\r\n  white-space: nowrap;\r\n  color: ${COLORS.gray90};\r\n  min-width: 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const NewMessages = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 20px;\r\n  min-width: 20px;\r\n  height: 20px;\r\n  min-height: 20px;\r\n  background-color: ${COLORS.blue60};\r\n  color: ${COLORS.white};\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Title = styled(TextShorter)`\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  color: ${COLORS.gray90};\r\n  white-space: nowrap;\r\n`;\r\n","import { FC } from 'react';\r\nimport { IDialogListItem } from '@src/api/Dialogs/models';\r\nimport * as ST from './styled';\r\nimport { Avatar, AvatarSize, TextShorter } from '@src/components';\r\nimport { getTimeMessage } from '@src/utils/date';\r\n\r\ninterface IProps {\r\n  dialog: IDialogListItem;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const DialogItem: FC<IProps> = ({ dialog, onClick }) => {\r\n  return (\r\n    <ST.Wrapper onClick={onClick}>\r\n      <Avatar\r\n        userId={dialog.user.id}\r\n        firstName={dialog.user.firstName}\r\n        lastName={dialog.user.lastName}\r\n        src={dialog.user.avatar}\r\n        size={AvatarSize.XXXL}\r\n      />\r\n      <ST.Content>\r\n        <ST.Header>\r\n          <ST.Title tooltip>\r\n            {dialog.user.lastName} {dialog.user.firstName} ({dialog.user.email})\r\n          </ST.Title>\r\n\r\n          <ST.Date>\r\n            {getTimeMessage(dialog.lastMessage.updatedAt)}\r\n          </ST.Date>\r\n        </ST.Header>\r\n        <ST.Header>\r\n          <ST.Text>\r\n            {dialog.lastMessage.text}\r\n          </ST.Text>\r\n          {Boolean(dialog.unreadableMessages) && (\r\n            <ST.NewMessages>\r\n              {dialog.unreadableMessages}\r\n            </ST.NewMessages>\r\n          )}\r\n        </ST.Header>\r\n      </ST.Content>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  min-height: 100%;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const NewMessage = styled.div`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  bottom: 20px;\r\n  left: calc(50% - 69px);\r\n  display: flex;\r\n  padding: 4px 8px;\r\n  border-radius: 5px;\r\n  color: ${COLORS.lightGray10};\r\n  background-color: ${COLORS.blue60};\r\n  \r\n  &:hover {\r\n    background-color: ${COLORS.blue70};\r\n  }\r\n\r\n  &:active,\r\n  &.active {\r\n    background-color: ${COLORS.blue80};\r\n  }\r\n`;\r\n\r\nexport const NewMessageWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ScrollableContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  position: relative;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.form`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-top: 1px solid ${COLORS.lightGray40};\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  background: transparent;\r\n`;\r\n\r\nexport const SendIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.gray60};\r\n  transition: color .3s;\r\n  \r\n  &:hover {\r\n    color: ${COLORS.blue60};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid ${COLORS.lightGray40};\r\n  box-shadow: 0 7px 15px rgba(0,0,0,.05);\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Dropdown } from '@components/Select/Dropdown';\r\n\r\nexport const Wrapper = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  justify-content: ${({ isOwn }) => isOwn ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nexport const Content = styled.div<{ isOwn: boolean }>`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  position: relative;\r\n  gap: 10px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding: 8px 8px 4px 8px;\r\n  max-width: calc(50% - 10px);\r\n  border-radius: 5px;\r\n  background-color: ${({ isOwn }) => isOwn ? COLORS.blue30 : COLORS.lightGray30};\r\n`;\r\n\r\nexport const StyledDropDown = styled(Dropdown)`\r\n  width: 200px;\r\n  top: -43px !important;\r\n  left: -150px;\r\n  \r\n  & > div {\r\n    background: ${COLORS.blue20};\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nexport const Date = styled.div`\r\n  color: ${COLORS.gray90}\r\n`;\r\n","import React, { FC, useMemo, useRef, useState } from 'react';\r\nimport { IMessage } from '@src/api/Dialogs/models';\r\nimport * as ST from './styled';\r\nimport { getTimeMessage } from '@src/utils/date';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { Dropdown } from '@components/Select/Dropdown';\r\nimport { Button, ButtonVariant } from '@src/components';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { SocketApi } from '@src/api/SocketApi/SocketApi';\r\n\r\ninterface IProps {\r\n  message: IMessage;\r\n}\r\n\r\nexport const Message: FC<IProps> = ({ message }) => {\r\n  const { user } = useAuth();\r\n  const refContainer = useRef<HTMLDivElement | null>(null);\r\n  const deleteModal = useModalControls();\r\n  const dropdown = useModalControls();\r\n\r\n  const isOwn = useMemo(() => message.user.id === user?.id, [message, user]);\r\n\r\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    if (isOwn) {\r\n      dropdown.open();\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    SocketApi.deleteMessage({ messageId: message.id });\r\n    deleteModal.close()\r\n  }\r\n\r\n  return (\r\n    <ST.Wrapper isOwn={isOwn}>\r\n      <ST.Content ref={refContainer} isOwn={isOwn} onContextMenu={handleClick}>\r\n        <ST.Text>{message.text}</ST.Text>\r\n        <ST.Date>{getTimeMessage(message.updatedAt)}</ST.Date>\r\n        {dropdown.isOpen && (\r\n          <ST.StyledDropDown\r\n            selectionContainer={refContainer.current as HTMLDivElement}\r\n            onClose={dropdown.close}\r\n          >\r\n            <Button variant={ButtonVariant.DANGER} text=\"Удалить\" fullWidth onClick={deleteModal.open} />\r\n          </ST.StyledDropDown>\r\n        )}\r\n      </ST.Content>\r\n      {deleteModal.isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={deleteModal.close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: deleteModal.close,\r\n            },\r\n            submit: {\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить сообщение?\r\n        </Dialog>\r\n      )}\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import { FC, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\r\nimport { IUser } from '@src/api/Users/models';\r\nimport * as ST from './styled';\r\nimport { AppLoader, Avatar, AvatarSize, Button, Textarea } from '@src/components';\r\nimport { Icon, IconSize } from '@components/Icon';\r\nimport { IDeleteMessage, IMessage, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { DialogsApi } from '@src/api/Dialogs/DialogsApi';\r\nimport { Message } from '@pages/Dialogs/Message';\r\nimport { SocketApi } from '@src/api/SocketApi/SocketApi';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\nimport { useMessageCallBack } from '@src/hooks';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { useFormik } from 'formik';\r\n\r\ninterface IProps {\r\n  dialogId: string;\r\n  user: IUser;\r\n  onBack?: () => void;\r\n}\r\n\r\nexport const ActiveDialog: FC<IProps> = ({ dialogId, user, onBack }) => {\r\n  const { user: currentUser } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [messages, setMessages] = useState<IMessage[]>([]);\r\n  const scrollRef = useRef<HTMLDivElement | null>(null);\r\n  const [showNewMessage, setShowNewMessage] = useState(false);\r\n  const form = useFormik({\r\n    initialValues: {\r\n      message: ''\r\n    },\r\n    onSubmit: (values) => {\r\n      onSend(values.message)\r\n    }\r\n  });\r\n\r\n  const onSend = (message: string) => {\r\n    SocketApi.sendMessage({\r\n      dialogId,\r\n      text: message,\r\n    });\r\n    form.resetForm();\r\n  }\r\n\r\n  const getDialog = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await DialogsApi.fetchDialogInfo(dialogId);\r\n\r\n      setMessages(res.data.messages);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as ISocketMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.MESSAGE && parsedMessage.dialogId === dialogId) {\r\n      setMessages(prev => [...prev, parsedMessage]);\r\n\r\n      if (parsedMessage.user.id !== currentUser?.id) {\r\n        SocketApi.readMessage({ messageId: parsedMessage.id });\r\n        if (scrollRef.current) {\r\n          const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop\r\n          if (scroll >= 50) {\r\n            setShowNewMessage(true)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (parsedMessage.event === MessageEvents.DELETE_MESSAGE) {\r\n      const parsedMessage = JSON.parse(message) as IDeleteMessage;\r\n\r\n      if (parsedMessage.dialogId === dialogId) {\r\n        setMessages(prev => prev.filter(it => it.id !== parsedMessage.messageId));\r\n      }\r\n    }\r\n  }, [dialogId, currentUser]);\r\n\r\n  const scrollToBottom = () => {\r\n    scrollRef.current?.scrollTo(0, scrollRef.current?.scrollHeight)\r\n  }\r\n\r\n  const handleScroll = () => {\r\n    if (scrollRef.current) {\r\n      const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop\r\n\r\n      if (scroll < 25) {\r\n        setShowNewMessage(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (scrollRef.current) {\r\n      const lastMsg = messages[messages.length - 1];\r\n      const scroll = scrollRef.current?.scrollHeight - scrollRef.current?.clientHeight - scrollRef.current?.scrollTop;\r\n\r\n      if (lastMsg && lastMsg.user.id === currentUser?.id) {\r\n        scrollToBottom()\r\n      } else if (scroll < 50) {\r\n        scrollToBottom()\r\n      }\r\n    }\r\n\r\n  }, [messages]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isLoading) {\r\n      scrollToBottom()\r\n    }\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    getDialog();\r\n  }, [dialogId]);\r\n\r\n  const renderedContent = useMemo(() => {\r\n    if (isLoading) {\r\n      return <AppLoader/>\r\n    }\r\n\r\n    if (!messages.length) {\r\n      return 'Нет сообщений'\r\n    }\r\n\r\n    return messages.map((it) => <Message key={it.id} message={it} />)\r\n  }, [messages, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <ST.Header>\r\n        {onBack && (\r\n          <Button onClick={onBack}>\r\n            <Icon type=\"arrow-left\" />\r\n          </Button>\r\n        )}\r\n        <Avatar\r\n          userId={user.id}\r\n          firstName={user.firstName}\r\n          size={AvatarSize.XXXL}\r\n          lastName={user.lastName}\r\n          src={user.avatar}\r\n        />\r\n        <ST.Title>{user.lastName} {user.firstName} ({user.email})</ST.Title>\r\n      </ST.Header>\r\n      <ST.NewMessageWrapper>\r\n        <ST.ScrollableContent\r\n          ref={scrollRef}\r\n          onScroll={handleScroll}\r\n        >\r\n          <ST.Content>\r\n            {renderedContent}\r\n          </ST.Content>\r\n        </ST.ScrollableContent>\r\n        {showNewMessage && (\r\n          <ST.NewMessage onClick={scrollToBottom}>\r\n            Новое сообщение\r\n          </ST.NewMessage>\r\n        )}\r\n      </ST.NewMessageWrapper>\r\n\r\n      <ST.Footer onSubmit={form.handleSubmit}>\r\n        <Textarea\r\n          name=\"message\"\r\n          value={form.values.message}\r\n          onChange={form.handleChange}\r\n          placeholder=\"Введите сообщение\"\r\n          onEnter={() => onSend(form.values.message)}\r\n        />\r\n        <ST.StyledButton>\r\n          <ST.SendIcon type=\"send\" size={IconSize.XL} />\r\n        </ST.StyledButton>\r\n      </ST.Footer>\r\n    </ST.Wrapper>\r\n  );\r\n}\r\n","import { ChangeEventHandler, FC, useEffect, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { IDeleteMessage, IDialogListItem, ISocketMessage } from '@src/api/Dialogs/models';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { DialogsApi } from '@src/api/Dialogs/DialogsApi';\r\nimport { useDebounce, useMessageCallBack, useWindowWidth } from '@src/hooks';\r\nimport { DialogItem } from '@pages/Dialogs/DialogItem';\r\nimport { useDialogsContext } from '@providers/DialogsProvider/DialogsContext';\r\nimport { ActiveDialog } from '@pages/Dialogs/ActiveDialog';\r\nimport { useAuth } from '@providers/AuthProvider';\r\nimport { MessageEvents } from '@src/api/SocketApi/models';\r\n\r\nconst Posts: FC = () => {\r\n  const { user } = useAuth();\r\n  const { newDialog, clearNewDialog, activeDialog, setActiveDialog } = useDialogsContext();\r\n  const [dialogs, setDialogs] = useState<IDialogListItem[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [search, setSearch] = useState('');\r\n  const debouncedSearch = useDebounce(search, 400);\r\n  const windowWidth = useWindowWidth();\r\n\r\n  useEffect(() => {\r\n    if (newDialog) {\r\n      const activeUser = newDialog.users.find(it => it.id !== user?.id);\r\n\r\n      if (activeUser) {\r\n        setActiveDialog({\r\n          id: newDialog.id,\r\n          user: activeUser,\r\n        });\r\n      }\r\n\r\n      clearNewDialog();\r\n    }\r\n  }, [newDialog]);\r\n\r\n  const handleChangeSearch: ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const getDialogs = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const res = await DialogsApi.fetchDialogs();\r\n\r\n      setDialogs(res.data);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDialogs()\r\n  }, [debouncedSearch]);\r\n\r\n  const handleBack = () => {\r\n    setActiveDialog(undefined);\r\n    getDialogs();\r\n  }\r\n\r\n  const showDialogs = useMemo(() => {\r\n    return windowWidth > 1010;\r\n  }, [windowWidth]);\r\n\r\n  const handleClickDialog = (dialog: IDialogListItem) => {\r\n    setActiveDialog(dialog);\r\n    setDialogs(prev => prev.map(it => {\r\n      if (it.id === dialog.id) {\r\n        it.unreadableMessages = 0;\r\n      }\r\n      return { ...it };\r\n    }))\r\n  }\r\n\r\n  useMessageCallBack((message: string) => {\r\n    const parsedMessage = JSON.parse(message) as ISocketMessage;\r\n\r\n    if (parsedMessage.event === MessageEvents.MESSAGE) {\r\n      if (!dialogs.find(it => it.id === parsedMessage.dialogId)) {\r\n        setDialogs(prev => [{ id: parsedMessage.dialogId, user: parsedMessage.user, unreadableMessages: 1, lastMessage: parsedMessage }, ...prev])\r\n      } else {\r\n        setDialogs(prev => prev.map(it => {\r\n          if (it.id === parsedMessage.dialogId && user?.id !== parsedMessage.user.id) {\r\n            if (activeDialog?.id !== parsedMessage.dialogId) {\r\n              it.unreadableMessages += 1;\r\n            }\r\n            it.lastMessage = parsedMessage;\r\n          }\r\n\r\n          if (it.id === parsedMessage.dialogId && user?.id === parsedMessage.user.id) {\r\n            it.lastMessage = { ...parsedMessage, read: true };\r\n          }\r\n          return { ...it };\r\n        }).sort((a, b) => Date.parse(b.lastMessage.updatedAt) - Date.parse(a.lastMessage.updatedAt)))\r\n      }\r\n    }\r\n\r\n    if (parsedMessage.event === MessageEvents.DELETE_MESSAGE) {\r\n      const parsedMessage = JSON.parse(message) as IDeleteMessage;\r\n\r\n      setDialogs(prev => prev.map(it => {\r\n        if (it.id === parsedMessage.dialogId) {\r\n          return {\r\n            ...it,\r\n            lastMessage: parsedMessage.lastMessage,\r\n          }\r\n        }\r\n\r\n        return it;\r\n      }))\r\n    }\r\n  }, [dialogs, user]);\r\n\r\n  const renderedDialogs = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!dialogs.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Диалогов нет\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    if (activeDialog) {\r\n      return (\r\n        <ST.Content>\r\n          {showDialogs && (\r\n            <ST.ScrollableContent hasActive>\r\n              <ST.DialogsContainer hasActive>\r\n                {dialogs.map(it => <DialogItem key={it.id} dialog={it} onClick={() => handleClickDialog(it)} />)}\r\n              </ST.DialogsContainer>\r\n            </ST.ScrollableContent>\r\n          )}\r\n          <ActiveDialog dialogId={activeDialog.id} user={activeDialog.user} onBack={showDialogs ? undefined : handleBack} />\r\n        </ST.Content>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        <ST.ScrollableContent>\r\n          <ST.DialogsContainer>\r\n            {dialogs.map(it => <DialogItem key={it.id} dialog={it} onClick={() => handleClickDialog(it)} />)}\r\n          </ST.DialogsContainer>\r\n        </ST.ScrollableContent>\r\n      </ST.Content>\r\n    )\r\n  }, [dialogs, isLoading, activeDialog, showDialogs]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader title=\"Диалоги\" search={search} onChangeSearch={handleChangeSearch} />\r\n      {renderedDialogs}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Posts;\r\n"],"names":["Buttons","styled","_templateObject","_taggedTemplateLiteral","StyledButton","Button","_templateObject2","Body","_templateObject3","StyledIcon","_templateObject4","COLORS","Content","_templateObject5","Container","_templateObject6","Close","_templateObject7","Title","_templateObject8","DialogTypes","dialogIcons","answer","notification","warning","info","Dialog","_ref","loading","className","title","type","closeHandler","onConfirm","onOk","actions","children","_jsx","Modal","open","closeOnDocumentClick","onClose","_jsxs","ST","onClick","Icon","_Fragment","_objectSpread","submit","variant","WARNING","ButtonVariant","isLoading","disabled","cancel","id","ok","Wrapper","ScrollableContent","hasActive","DialogsContainer","_ref2","_ref3","concat","EmptyText","Header","Text","TextShorter","NewMessages","Date","DialogItem","dialog","Avatar","userId","user","firstName","lastName","src","avatar","size","AvatarSize","tooltip","email","getTimeMessage","lastMessage","updatedAt","text","Boolean","unreadableMessages","NewMessage","NewMessageWrapper","Footer","SendIcon","_templateObject9","_templateObject10","isOwn","StyledDropDown","Dropdown","Message","message","useAuth","refContainer","useRef","deleteModal","useModalControls","dropdown","useMemo","ref","onContextMenu","e","preventDefault","isOpen","selectionContainer","current","close","fullWidth","SocketApi","messageId","ActiveDialog","dialogId","onBack","currentUser","_useState","useState","_useState2","_slicedToArray","setIsLoading","_useState3","_useState4","messages","setMessages","scrollRef","_useState5","_useState6","showNewMessage","setShowNewMessage","form","useFormik","initialValues","onSubmit","values","onSend","resetForm","getDialog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","DialogsApi","sent","data","t0","toastError","finish","stop","apply","arguments","useMessageCallBack","_scrollRef$current","_scrollRef$current2","_scrollRef$current3","parsedMessage","JSON","parse","event","MessageEvents","_toConsumableArray","scrollHeight","clientHeight","scrollTop","filter","it","scrollToBottom","_scrollRef$current4","_scrollRef$current5","scrollTo","useLayoutEffect","_scrollRef$current9","_scrollRef$current10","_scrollRef$current11","lastMsg","length","scroll","useEffect","renderedContent","AppLoader","map","onScroll","_scrollRef$current6","_scrollRef$current7","_scrollRef$current8","handleSubmit","Textarea","name","value","onChange","handleChange","placeholder","onEnter","IconSize","_useDialogsContext","useDialogsContext","newDialog","clearNewDialog","activeDialog","setActiveDialog","dialogs","setDialogs","search","setSearch","debouncedSearch","useDebounce","windowWidth","useWindowWidth","activeUser","users","find","getDialogs","handleBack","undefined","showDialogs","handleClickDialog","read","sort","a","b","renderedDialogs","PageHeader","onChangeSearch","target"],"sourceRoot":""}