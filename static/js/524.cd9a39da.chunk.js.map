{"version":3,"file":"static/js/524.cd9a39da.chunk.js","mappings":"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","sources":["pages/Roles/styled.ts","pages/Roles/RoleItem/styled.ts","pages/Roles/UpdateRoleModal/styled.ts","pages/Roles/UpdateRoleModal/index.tsx","pages/Roles/RoleItem/index.tsx","pages/Roles/CreateRoleModal/styled.ts","pages/Roles/CreateRoleModal/index.tsx","pages/Roles/index.tsx","utils/roles.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-row-gap: 14px;\r\n  width: 100%;\r\n  height: fit-content;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const EmptyText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { COLORS } from '@src/utils/colors';\r\nimport { Icon } from '@components/Icon';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid ${COLORS.lightGray40};\r\n  background: ${COLORS.white};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  font-size: 15px;\r\n`;\r\n\r\nexport const Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 10px;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.red60};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.red80};\r\n  }\r\n`;\r\n\r\nexport const EditIcon = styled(Icon)`\r\n  cursor: pointer;\r\n  color: ${COLORS.darkGray110};\r\n  transition: color 0.2s;\r\n\r\n  &:hover {\r\n    color: ${COLORS.darkGray140};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { TagsApi } from '@src/api/Tags/TagsApi';\r\nimport { handleFormError, toastError, toastSuccess } from '@src/utils/toast';\r\nimport { ITag } from '@src/api/Tags/models';\r\nimport { IRole } from '@src/api/Roles/models';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  role: IRole;\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface TagForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const UpdateRoleModal: FC<IProps> = ({ close, refetch, role }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<TagForm>({\r\n    initialValues: {\r\n      value: role.value,\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await RolesApi.fetchUpdateRole(role.id, values.value);\r\n        toastSuccess(`Роль ${values.value} успешно обновлена`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        handleFormError(e, form)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Изменение роли\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          value={form.values.value}\r\n          caption=\"Название роли\"\r\n          placeholder=\"Введите название роли\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n          onBlur={form.handleBlur}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Сохранить\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import { FC, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { IconSize } from '@components/Icon';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { Dialog, DialogTypes } from '@components/Dialog';\r\nimport { toastError, toastSuccess } from '@src/utils/toast';\r\nimport { IRole, RoleType } from '@src/api/Roles/models';\r\nimport { UpdateRoleModal } from '@pages/Roles/UpdateRoleModal';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport { useRenderIfRole } from '@src/utils/roles';\r\n\r\ninterface IProps {\r\n  refetch: () => void;\r\n  role: IRole;\r\n}\r\n\r\nexport const RoleItem: FC<IProps> = ({ role, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { isOpen, open, close } = useModalControls();\r\n  const updateModal = useModalControls();\r\n  const { execIf } = useRenderIfRole();\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await RolesApi.fetchDeleteRole(role.id);\r\n      refetch();\r\n      close();\r\n      toastSuccess(`Роль ${role.value} успешно удалена`);\r\n    } catch (e) {\r\n      toastError(e);\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <ST.Info>\r\n        {role.value} ({role.id})\r\n      </ST.Info>\r\n      <ST.Controls>\r\n        {role.canDeleteEdit && execIf(RoleType.ADMIN, <ST.EditIcon type={'edit'} size={IconSize.XL} onClick={updateModal.open} />)}\r\n        {role.canDeleteEdit && execIf(RoleType.ADMIN, <ST.DeleteIcon type={'delete'} size={IconSize.XL} onClick={open} />)}\r\n      </ST.Controls>\r\n      {isOpen && (\r\n        <Dialog\r\n          type={DialogTypes.WARNING}\r\n          closeHandler={close}\r\n          onConfirm={handleDelete}\r\n          actions={{\r\n            cancel: {\r\n              text: 'Отменить',\r\n              onClick: close,\r\n            },\r\n            submit: {\r\n              isLoading,\r\n              text: 'Удалить',\r\n            }\r\n          }}\r\n        >\r\n          Вы действительно хотите удалить роль {role.value}?\r\n        </Dialog>\r\n      )}\r\n      {updateModal.isOpen && (\r\n        <UpdateRoleModal role={role} close={updateModal.close} refetch={refetch} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  height: fit-content;\r\n  grid-row-gap: 24px;\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  grid-column-gap: 24px;\r\n`;\r\n","import { FC, useState } from 'react';\r\nimport { Button, ButtonVariant, Input, SideModal } from '@src/components';\r\nimport * as ST from './styled';\r\nimport { useFormik } from 'formik';\r\nimport { handleFormError, toastError, toastSuccess } from '@src/utils/toast';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport * as yup from 'yup';\r\n\r\ninterface IProps {\r\n  close: () => void;\r\n  refetch: () => void;\r\n}\r\n\r\ninterface RoleForm {\r\n  value: string;\r\n}\r\n\r\nlet VALIDATION_SCHEMA = yup.object().shape({\r\n  value: yup.string().required('Обязательное поле'),\r\n});\r\n\r\nexport const CreateRoleModal: FC<IProps> = ({ close, refetch }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const form = useFormik<RoleForm>({\r\n    initialValues: {\r\n      value: '',\r\n    },\r\n    validationSchema: VALIDATION_SCHEMA,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        setIsLoading(true);\r\n        await RolesApi.fetchCreateRole(values.value);\r\n        toastSuccess(`Роль ${values.value} успешно создана`)\r\n        setIsLoading(false)\r\n        close();\r\n        await refetch();\r\n      } catch (e) {\r\n        handleFormError(e, form)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <SideModal\r\n      titleText=\"Создание роли\"\r\n      onClose={close}\r\n      closeOnDocumentClick={false}\r\n    >\r\n      <ST.Form onSubmit={form.handleSubmit}>\r\n        <Input\r\n          name=\"value\"\r\n          onChange={form.handleChange}\r\n          value={form.values.value}\r\n          caption=\"Название роли\"\r\n          placeholder=\"Введите название роли\"\r\n          isError={Boolean(form.errors.value)}\r\n          errorText={form.errors.value}\r\n          onBlur={form.handleBlur}\r\n        />\r\n        <ST.Footer>\r\n          <Button text=\"Создать\" fullWidth isLoading={isLoading} />\r\n          <Button variant={ButtonVariant.OUTLINE} text=\"Отмена\" fullWidth onClick={close} />\r\n        </ST.Footer>\r\n      </ST.Form>\r\n    </SideModal>\r\n  )\r\n}\r\n","import { FC, useEffect, useMemo, useState } from 'react';\r\nimport * as ST from './styled';\r\nimport { AppLoader, PageHeader } from '@src/components';\r\nimport { useModalControls } from '@src/hooks';\r\nimport { toastError } from '@src/utils/toast';\r\nimport { IRole, RoleType } from '@src/api/Roles/models';\r\nimport { RolesApi } from '@src/api/Roles/RolesApi';\r\nimport { RoleItem } from '@pages/Roles/RoleItem';\r\nimport { CreateRoleModal } from '@pages/Roles/CreateRoleModal';\r\nimport { useRenderIfRole } from '@src/utils/roles';\r\n\r\nconst Roles: FC = () => {\r\n  const { isOpen, open, close } = useModalControls();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [roles, setRoles] = useState<IRole[]>([]);\r\n  const { execIf } = useRenderIfRole();\r\n\r\n  const getRoles = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await RolesApi.fetchRoles();\r\n      setRoles(res.data);\r\n    } catch (e) {\r\n      toastError(e)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getRoles();\r\n  }, []);\r\n\r\n  const renderedRoles = useMemo(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoader />\r\n      )\r\n    }\r\n\r\n    if (!roles.length) {\r\n      return (\r\n        <ST.EmptyText>\r\n          Ролей нет\r\n        </ST.EmptyText>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ST.Content>\r\n        {roles.map(it => <RoleItem key={it.id} role={it} refetch={getRoles} />)}\r\n      </ST.Content>\r\n    )\r\n  }, [roles, isLoading]);\r\n\r\n  return (\r\n    <ST.Wrapper>\r\n      <PageHeader\r\n        title=\"Роли\"\r\n        buttonText={execIf(RoleType.ADMIN, \"Создать роль\")}\r\n        onButtonClick={execIf(RoleType.ADMIN, open)}\r\n        count={`${roles.length} ролей`}\r\n      />\r\n      {renderedRoles}\r\n      {isOpen && (\r\n        <CreateRoleModal close={close} refetch={getRoles} />\r\n      )}\r\n    </ST.Wrapper>\r\n  )\r\n}\r\n\r\nexport default Roles;\r\n","import { RoleType } from '@src/api/Roles/models';\r\nimport { useAuth } from '@providers/AuthProvider';\r\n\r\nexport const useRenderIfRole = () => {\r\n  const { user } = useAuth();\r\n\r\n  const execIf = (role: RoleType, content: any) => {\r\n    if (!user?.roles.map(it => it.value).includes(role)) {\r\n      return null;\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  return {\r\n    execIf\r\n  }\r\n}\r\n\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","EmptyText","_templateObject3","COLORS","Info","Controls","DeleteIcon","Icon","_templateObject4","EditIcon","_templateObject5","Form","Footer","VALIDATION_SCHEMA","yup","shape","value","required","UpdateRoleModal","_ref","close","refetch","role","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","form","useFormik","initialValues","validationSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","RolesApi","id","toastSuccess","concat","t0","handleFormError","finish","stop","_x","apply","arguments","_jsx","SideModal","titleText","onClose","closeOnDocumentClick","children","_jsxs","ST","handleSubmit","Input","name","onChange","handleChange","caption","placeholder","isError","Boolean","errors","errorText","onBlur","handleBlur","Button","text","fullWidth","variant","ButtonVariant","onClick","RoleItem","_useModalControls","useModalControls","isOpen","open","updateModal","execIf","useRenderIfRole","handleDelete","_ref2","toastError","canDeleteEdit","RoleType","type","size","IconSize","Dialog","DialogTypes","closeHandler","onConfirm","actions","cancel","submit","CreateRoleModal","_useState3","_useState4","roles","setRoles","getRoles","res","sent","data","useEffect","renderedRoles","useMemo","AppLoader","length","map","it","PageHeader","title","buttonText","onButtonClick","count","user","useAuth","content","includes"],"sourceRoot":""}